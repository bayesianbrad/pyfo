;; gorilla-repl.fileformat = 1

;; **
;;; # Testing Gibbs sampling inference for basic FOPPL models 
;; **

;; @@
(ns foppl-bugs
  (:require [gorilla-plot.core :as plot]
            [foppl.desugar :refer :all]
            [foppl.core :as foppl :refer [foppl-query print-graph]]
            [foppl.gibbs :as gibbs]
            [clojure.core.matrix :as mat]
            :reload)
  (:use [anglican runtime]))
;; @@
;; =>
;;; {"type":"html","content":"<span class='clj-nil'>nil</span>","value":"nil"}
;; <=

;; **
;;; ## Linear regression.
;; **

;; @@
(def data [[1.0 2.1]
           [2.0 3.9]
           [3.0 5.3]
           [4.0 7.7]
           [5.0 10.2]
           [6.0 12.9]])

(def linear-regression
  (foppl-query
    (defn observe-data [_ data slope bias]
      (let [xn (first (first data))
            yn (second (first data))
            zn (+ (* slope xn) bias)]
        (observe (normal zn 1.0) yn)
        (rest data)))

    (let [slope (sample (normal 0.0 10.0))
          bias  (sample (normal 0.0 10.0))]
      (loop 6 data observe-data slope bias)
      (vector slope bias))))
;; @@
;; =>
;;; {"type":"html","content":"<span class='clj-var'>#&#x27;foppl-bugs/linear-regression</span>","value":"#'foppl-bugs/linear-regression"}
;; <=

;; @@
(let [[G E] linear-regression]
  (foppl/print-graph G)
  E)
;; @@
;; ->
;;; Vertices V: #{x29523 x29631 x29606 x29556 x29581 x29535 x29526 x29656}
;;; 
;;; Arcs A: #{[x29526 x29631] [x29523 x29556] [x29526 x29581] [x29526 x29656] [x29526 x29556] [x29526 x29535] [x29523 x29535] [x29523 x29581] [x29523 x29656] [x29523 x29631] [x29523 x29606] [x29526 x29606]}
;;; 
;;; Conditional densities P:
;;; x29523 -&gt; (fn [] (normal 0.0 10.0))
;;; x29526 -&gt; (fn [] (normal 0.0 10.0))
;;; x29535 -&gt; (fn [x29526 x29523] (normal (+ (* x29523 1.0) x29526) 1.0))
;;; x29556 -&gt; (fn [x29526 x29523] (normal (+ (* x29523 2.0) x29526) 1.0))
;;; x29581 -&gt; (fn [x29526 x29523] (normal (+ (* x29523 3.0) x29526) 1.0))
;;; x29606 -&gt; (fn [x29526 x29523] (normal (+ (* x29523 4.0) x29526) 1.0))
;;; x29631 -&gt; (fn [x29526 x29523] (normal (+ (* x29523 5.0) x29526) 1.0))
;;; x29656 -&gt; (fn [x29526 x29523] (normal (+ (* x29523 6.0) x29526) 1.0))
;;; 
;;; Observed values O:
;;; x29535 -&gt; 2.1; (fn [] true)
;;; x29556 -&gt; 3.9; (fn [] true)
;;; x29581 -&gt; 5.3; (fn [] true)
;;; x29606 -&gt; 7.7; (fn [] true)
;;; x29631 -&gt; 10.2; (fn [] true)
;;; x29656 -&gt; 12.9; (fn [] true)
;;; 
;; <-
;; =>
;;; {"type":"list-like","open":"<span class='clj-record'>#foppl.core.ClojureFunction{</span>","close":"<span class='clj-record'>}</span>","separator":" ","items":[{"type":"list-like","open":"","close":"","separator":" ","items":[{"type":"html","content":"<span class='clj-keyword'>:args</span>","value":":args"},{"type":"list-like","open":"<span class='clj-vector'>[</span>","close":"<span class='clj-vector'>]</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-symbol'>x29523</span>","value":"x29523"},{"type":"html","content":"<span class='clj-symbol'>x29526</span>","value":"x29526"}],"value":"[x29523 x29526]"}],"value":"[:args [x29523 x29526]]"},{"type":"list-like","open":"","close":"","separator":" ","items":[{"type":"html","content":"<span class='clj-keyword'>:body</span>","value":":body"},{"type":"list-like","open":"<span class='clj-vector'>[</span>","close":"<span class='clj-vector'>]</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-symbol'>x29523</span>","value":"x29523"},{"type":"html","content":"<span class='clj-symbol'>x29526</span>","value":"x29526"}],"value":"[x29523 x29526]"}],"value":"[:body [x29523 x29526]]"},{"type":"list-like","open":"","close":"","separator":" ","items":[{"type":"html","content":"<span class='clj-keyword'>:fn</span>","value":":fn"},{"type":"html","content":"<span class='clj-unkown'>#function[foppl-bugs/eval29668$fn--29669]</span>","value":"#function[foppl-bugs/eval29668$fn--29669]"}],"value":"[:fn #function[foppl-bugs/eval29668$fn--29669]]"}],"value":"#foppl.core.ClojureFunction{:args [x29523 x29526], :body [x29523 x29526], :fn #function[foppl-bugs/eval29668$fn--29669]}"}
;; <=

;; **
;;; Sampling from prior:
;; **

;; @@
(def prior-sample (foppl/draw-from-prior linear-regression))

(let [[m b] (foppl/get-output linear-regression prior-sample)]
  (plot/compose
    (plot/list-plot data)
    (plot/plot #(+ b (* m %)) [0 7])
    ))

;; @@
;; =>
;;; {"type":"vega","content":{"width":400,"height":247.2187957763672,"padding":{"top":10,"left":55,"bottom":40,"right":10},"scales":[{"name":"x","type":"linear","range":"width","zero":false,"domain":{"data":"07cd3e7f-1d3c-4958-be9d-5f19864d5e54","field":"data.x"}},{"name":"y","type":"linear","range":"height","nice":true,"zero":false,"domain":{"data":"07cd3e7f-1d3c-4958-be9d-5f19864d5e54","field":"data.y"}}],"axes":[{"type":"x","scale":"x"},{"type":"y","scale":"y"}],"data":[{"name":"07cd3e7f-1d3c-4958-be9d-5f19864d5e54","values":[{"x":1.0,"y":2.1},{"x":2.0,"y":3.9},{"x":3.0,"y":5.3},{"x":4.0,"y":7.7},{"x":5.0,"y":10.2},{"x":6.0,"y":12.9}]},{"name":"028f1c9d-5752-433e-a00a-3a9c6e11f2f8","values":[{"x":0,"y":3.578941362964141},{"x":0.07000000029802322,"y":4.096449423916493},{"x":0.14000000059604645,"y":4.613957484868845},{"x":0.21000000089406967,"y":5.1314655458211975},{"x":0.2800000011920929,"y":5.648973606773549},{"x":0.3500000014901161,"y":6.166481667725902},{"x":0.42000000178813934,"y":6.683989728678254},{"x":0.49000000208616257,"y":7.201497789630606},{"x":0.5600000023841858,"y":7.719005850582958},{"x":0.630000002682209,"y":8.236513911535312},{"x":0.7000000029802322,"y":8.754021972487664},{"x":0.7700000032782555,"y":9.271530033440015},{"x":0.8400000035762787,"y":9.789038094392367},{"x":0.9100000038743019,"y":10.30654615534472},{"x":0.9800000041723251,"y":10.824054216297071},{"x":1.0500000044703484,"y":11.341562277249423},{"x":1.1200000047683716,"y":11.859070338201775},{"x":1.1900000050663948,"y":12.376578399154129},{"x":1.260000005364418,"y":12.89408646010648},{"x":1.3300000056624413,"y":13.411594521058833},{"x":1.4000000059604645,"y":13.929102582011184},{"x":1.4700000062584877,"y":14.446610642963536},{"x":1.540000006556511,"y":14.964118703915888},{"x":1.6100000068545341,"y":15.481626764868242},{"x":1.6800000071525574,"y":15.999134825820594},{"x":1.7500000074505806,"y":16.516642886772946},{"x":1.8200000077486038,"y":17.034150947725298},{"x":1.890000008046627,"y":17.55165900867765},{"x":1.9600000083446503,"y":18.06916706963},{"x":2.0300000086426735,"y":18.586675130582357},{"x":2.1000000089406967,"y":19.10418319153471},{"x":2.17000000923872,"y":19.621691252487057},{"x":2.240000009536743,"y":20.13919931343941},{"x":2.3100000098347664,"y":20.656707374391765},{"x":2.3800000101327896,"y":21.174215435344117},{"x":2.450000010430813,"y":21.69172349629647},{"x":2.520000010728836,"y":22.20923155724882},{"x":2.5900000110268593,"y":22.726739618201172},{"x":2.6600000113248825,"y":23.244247679153524},{"x":2.7300000116229057,"y":23.761755740105876},{"x":2.800000011920929,"y":24.279263801058228},{"x":2.870000012218952,"y":24.79677186201058},{"x":2.9400000125169754,"y":25.314279922962932},{"x":3.0100000128149986,"y":25.831787983915284},{"x":3.080000013113022,"y":26.349296044867636},{"x":3.150000013411045,"y":26.86680410581999},{"x":3.2200000137090683,"y":27.384312166772343},{"x":3.2900000140070915,"y":27.901820227724695},{"x":3.3600000143051147,"y":28.419328288677047},{"x":3.430000014603138,"y":28.9368363496294},{"x":3.500000014901161,"y":29.45434441058175},{"x":3.5700000151991844,"y":29.971852471534103},{"x":3.6400000154972076,"y":30.489360532486455},{"x":3.710000015795231,"y":31.006868593438806},{"x":3.780000016093254,"y":31.52437665439116},{"x":3.8500000163912773,"y":32.041884715343514},{"x":3.9200000166893005,"y":32.559392776295866},{"x":3.9900000169873238,"y":33.07690083724822},{"x":4.060000017285347,"y":33.59440889820057},{"x":4.13000001758337,"y":34.11191695915292},{"x":4.200000017881393,"y":34.62942502010527},{"x":4.270000018179417,"y":35.146933081057625},{"x":4.34000001847744,"y":35.66444114200998},{"x":4.410000018775463,"y":36.18194920296233},{"x":4.480000019073486,"y":36.69945726391468},{"x":4.5500000193715096,"y":37.21696532486703},{"x":4.620000019669533,"y":37.734473385819385},{"x":4.690000019967556,"y":38.25198144677174},{"x":4.760000020265579,"y":38.76948950772409},{"x":4.8300000205636024,"y":39.28699756867644},{"x":4.900000020861626,"y":39.80450562962879},{"x":4.970000021159649,"y":40.322013690581144},{"x":5.040000021457672,"y":40.839521751533496},{"x":5.110000021755695,"y":41.35702981248585},{"x":5.180000022053719,"y":41.8745378734382},{"x":5.250000022351742,"y":42.39204593439055},{"x":5.320000022649765,"y":42.909553995342904},{"x":5.390000022947788,"y":43.427062056295256},{"x":5.4600000232458115,"y":43.94457011724761},{"x":5.530000023543835,"y":44.46207817819996},{"x":5.600000023841858,"y":44.97958623915231},{"x":5.670000024139881,"y":45.49709430010466},{"x":5.740000024437904,"y":46.014602361057015},{"x":5.810000024735928,"y":46.53211042200937},{"x":5.880000025033951,"y":47.04961848296172},{"x":5.950000025331974,"y":47.56712654391407},{"x":6.020000025629997,"y":48.08463460486642},{"x":6.0900000259280205,"y":48.602142665818775},{"x":6.160000026226044,"y":49.11965072677113},{"x":6.230000026524067,"y":49.63715878772348},{"x":6.30000002682209,"y":50.154666848675845},{"x":6.370000027120113,"y":50.6721749096282},{"x":6.440000027418137,"y":51.18968297058055},{"x":6.51000002771616,"y":51.7071910315329},{"x":6.580000028014183,"y":52.22469909248525},{"x":6.650000028312206,"y":52.742207153437604},{"x":6.7200000286102295,"y":53.259715214389956},{"x":6.790000028908253,"y":53.77722327534231},{"x":6.860000029206276,"y":54.29473133629466},{"x":6.930000029504299,"y":54.81223939724701}]}],"marks":[{"type":"symbol","from":{"data":"07cd3e7f-1d3c-4958-be9d-5f19864d5e54"},"properties":{"enter":{"x":{"scale":"x","field":"data.x"},"y":{"scale":"y","field":"data.y"},"fill":{"value":"steelblue"},"fillOpacity":{"value":1}},"update":{"shape":"circle","size":{"value":70},"stroke":{"value":"transparent"}},"hover":{"size":{"value":210},"stroke":{"value":"white"}}}},{"type":"line","from":{"data":"028f1c9d-5752-433e-a00a-3a9c6e11f2f8"},"properties":{"enter":{"x":{"scale":"x","field":"data.x"},"y":{"scale":"y","field":"data.y"},"stroke":{"value":"#FF29D2"},"strokeWidth":{"value":2},"strokeOpacity":{"value":1}}}}]},"value":"#gorilla_repl.vega.VegaView{:content {:width 400, :height 247.2188, :padding {:top 10, :left 55, :bottom 40, :right 10}, :scales [{:name \"x\", :type \"linear\", :range \"width\", :zero false, :domain {:data \"07cd3e7f-1d3c-4958-be9d-5f19864d5e54\", :field \"data.x\"}} {:name \"y\", :type \"linear\", :range \"height\", :nice true, :zero false, :domain {:data \"07cd3e7f-1d3c-4958-be9d-5f19864d5e54\", :field \"data.y\"}}], :axes [{:type \"x\", :scale \"x\"} {:type \"y\", :scale \"y\"}], :data ({:name \"07cd3e7f-1d3c-4958-be9d-5f19864d5e54\", :values ({:x 1.0, :y 2.1} {:x 2.0, :y 3.9} {:x 3.0, :y 5.3} {:x 4.0, :y 7.7} {:x 5.0, :y 10.2} {:x 6.0, :y 12.9})} {:name \"028f1c9d-5752-433e-a00a-3a9c6e11f2f8\", :values ({:x 0, :y 3.578941362964141} {:x 0.07000000029802322, :y 4.096449423916493} {:x 0.14000000059604645, :y 4.613957484868845} {:x 0.21000000089406967, :y 5.1314655458211975} {:x 0.2800000011920929, :y 5.648973606773549} {:x 0.3500000014901161, :y 6.166481667725902} {:x 0.42000000178813934, :y 6.683989728678254} {:x 0.49000000208616257, :y 7.201497789630606} {:x 0.5600000023841858, :y 7.719005850582958} {:x 0.630000002682209, :y 8.236513911535312} {:x 0.7000000029802322, :y 8.754021972487664} {:x 0.7700000032782555, :y 9.271530033440015} {:x 0.8400000035762787, :y 9.789038094392367} {:x 0.9100000038743019, :y 10.30654615534472} {:x 0.9800000041723251, :y 10.824054216297071} {:x 1.0500000044703484, :y 11.341562277249423} {:x 1.1200000047683716, :y 11.859070338201775} {:x 1.1900000050663948, :y 12.376578399154129} {:x 1.260000005364418, :y 12.89408646010648} {:x 1.3300000056624413, :y 13.411594521058833} {:x 1.4000000059604645, :y 13.929102582011184} {:x 1.4700000062584877, :y 14.446610642963536} {:x 1.540000006556511, :y 14.964118703915888} {:x 1.6100000068545341, :y 15.481626764868242} {:x 1.6800000071525574, :y 15.999134825820594} {:x 1.7500000074505806, :y 16.516642886772946} {:x 1.8200000077486038, :y 17.034150947725298} {:x 1.890000008046627, :y 17.55165900867765} {:x 1.9600000083446503, :y 18.06916706963} {:x 2.0300000086426735, :y 18.586675130582357} {:x 2.1000000089406967, :y 19.10418319153471} {:x 2.17000000923872, :y 19.621691252487057} {:x 2.240000009536743, :y 20.13919931343941} {:x 2.3100000098347664, :y 20.656707374391765} {:x 2.3800000101327896, :y 21.174215435344117} {:x 2.450000010430813, :y 21.69172349629647} {:x 2.520000010728836, :y 22.20923155724882} {:x 2.5900000110268593, :y 22.726739618201172} {:x 2.6600000113248825, :y 23.244247679153524} {:x 2.7300000116229057, :y 23.761755740105876} {:x 2.800000011920929, :y 24.279263801058228} {:x 2.870000012218952, :y 24.79677186201058} {:x 2.9400000125169754, :y 25.314279922962932} {:x 3.0100000128149986, :y 25.831787983915284} {:x 3.080000013113022, :y 26.349296044867636} {:x 3.150000013411045, :y 26.86680410581999} {:x 3.2200000137090683, :y 27.384312166772343} {:x 3.2900000140070915, :y 27.901820227724695} {:x 3.3600000143051147, :y 28.419328288677047} {:x 3.430000014603138, :y 28.9368363496294} {:x 3.500000014901161, :y 29.45434441058175} {:x 3.5700000151991844, :y 29.971852471534103} {:x 3.6400000154972076, :y 30.489360532486455} {:x 3.710000015795231, :y 31.006868593438806} {:x 3.780000016093254, :y 31.52437665439116} {:x 3.8500000163912773, :y 32.041884715343514} {:x 3.9200000166893005, :y 32.559392776295866} {:x 3.9900000169873238, :y 33.07690083724822} {:x 4.060000017285347, :y 33.59440889820057} {:x 4.13000001758337, :y 34.11191695915292} {:x 4.200000017881393, :y 34.62942502010527} {:x 4.270000018179417, :y 35.146933081057625} {:x 4.34000001847744, :y 35.66444114200998} {:x 4.410000018775463, :y 36.18194920296233} {:x 4.480000019073486, :y 36.69945726391468} {:x 4.5500000193715096, :y 37.21696532486703} {:x 4.620000019669533, :y 37.734473385819385} {:x 4.690000019967556, :y 38.25198144677174} {:x 4.760000020265579, :y 38.76948950772409} {:x 4.8300000205636024, :y 39.28699756867644} {:x 4.900000020861626, :y 39.80450562962879} {:x 4.970000021159649, :y 40.322013690581144} {:x 5.040000021457672, :y 40.839521751533496} {:x 5.110000021755695, :y 41.35702981248585} {:x 5.180000022053719, :y 41.8745378734382} {:x 5.250000022351742, :y 42.39204593439055} {:x 5.320000022649765, :y 42.909553995342904} {:x 5.390000022947788, :y 43.427062056295256} {:x 5.4600000232458115, :y 43.94457011724761} {:x 5.530000023543835, :y 44.46207817819996} {:x 5.600000023841858, :y 44.97958623915231} {:x 5.670000024139881, :y 45.49709430010466} {:x 5.740000024437904, :y 46.014602361057015} {:x 5.810000024735928, :y 46.53211042200937} {:x 5.880000025033951, :y 47.04961848296172} {:x 5.950000025331974, :y 47.56712654391407} {:x 6.020000025629997, :y 48.08463460486642} {:x 6.0900000259280205, :y 48.602142665818775} {:x 6.160000026226044, :y 49.11965072677113} {:x 6.230000026524067, :y 49.63715878772348} {:x 6.30000002682209, :y 50.154666848675845} {:x 6.370000027120113, :y 50.6721749096282} {:x 6.440000027418137, :y 51.18968297058055} {:x 6.51000002771616, :y 51.7071910315329} {:x 6.580000028014183, :y 52.22469909248525} {:x 6.650000028312206, :y 52.742207153437604} {:x 6.7200000286102295, :y 53.259715214389956} {:x 6.790000028908253, :y 53.77722327534231} {:x 6.860000029206276, :y 54.29473133629466} {:x 6.930000029504299, :y 54.81223939724701})}), :marks ({:type \"symbol\", :from {:data \"07cd3e7f-1d3c-4958-be9d-5f19864d5e54\"}, :properties {:enter {:x {:scale \"x\", :field \"data.x\"}, :y {:scale \"y\", :field \"data.y\"}, :fill {:value \"steelblue\"}, :fillOpacity {:value 1}}, :update {:shape \"circle\", :size {:value 70}, :stroke {:value \"transparent\"}}, :hover {:size {:value 210}, :stroke {:value \"white\"}}}} {:type \"line\", :from {:data \"028f1c9d-5752-433e-a00a-3a9c6e11f2f8\"}, :properties {:enter {:x {:scale \"x\", :field \"data.x\"}, :y {:scale \"y\", :field \"data.y\"}, :stroke {:value \"#FF29D2\"}, :strokeWidth {:value 2}, :strokeOpacity {:value 1}}}})}}"}
;; <=

;; **
;;; ### Take 1000 gibbs steps, and look at the final sample
;; **

;; @@
(def samples (take 1000 (gibbs/gibbs-seq linear-regression)))

(let [[m b] (last samples)]
  (plot/compose
    (plot/plot #(+ b (* m %)) [0 7])
    (plot/list-plot data)))


;; @@
;; =>
;;; {"type":"vega","content":{"width":400,"height":247.2187957763672,"padding":{"top":10,"left":55,"bottom":40,"right":10},"scales":[{"name":"x","type":"linear","range":"width","zero":false,"domain":{"data":"2c6f19ad-3e67-466c-a341-9e413c97f776","field":"data.x"}},{"name":"y","type":"linear","range":"height","nice":true,"zero":false,"domain":{"data":"2c6f19ad-3e67-466c-a341-9e413c97f776","field":"data.y"}}],"axes":[{"type":"x","scale":"x"},{"type":"y","scale":"y"}],"data":[{"name":"2c6f19ad-3e67-466c-a341-9e413c97f776","values":[{"x":0,"y":1.9370747809810598},{"x":0.07000000029802322,"y":2.041184017688171},{"x":0.14000000059604645,"y":2.1452932543952823},{"x":0.21000000089406967,"y":2.2494024911023933},{"x":0.2800000011920929,"y":2.353511727809505},{"x":0.3500000014901161,"y":2.457620964516616},{"x":0.42000000178813934,"y":2.5617302012237273},{"x":0.49000000208616257,"y":2.6658394379308383},{"x":0.5600000023841858,"y":2.7699486746379494},{"x":0.630000002682209,"y":2.874057911345061},{"x":0.7000000029802322,"y":2.978167148052172},{"x":0.7700000032782555,"y":3.0822763847592833},{"x":0.8400000035762787,"y":3.1863856214663944},{"x":0.9100000038743019,"y":3.2904948581735054},{"x":0.9800000041723251,"y":3.3946040948806164},{"x":1.0500000044703484,"y":3.498713331587728},{"x":1.1200000047683716,"y":3.6028225682948394},{"x":1.1900000050663948,"y":3.7069318050019504},{"x":1.260000005364418,"y":3.8110410417090614},{"x":1.3300000056624413,"y":3.915150278416173},{"x":1.4000000059604645,"y":4.019259515123284},{"x":1.4700000062584877,"y":4.123368751830395},{"x":1.540000006556511,"y":4.2274779885375064},{"x":1.6100000068545341,"y":4.3315872252446175},{"x":1.6800000071525574,"y":4.4356964619517285},{"x":1.7500000074505806,"y":4.53980569865884},{"x":1.8200000077486038,"y":4.6439149353659515},{"x":1.890000008046627,"y":4.7480241720730625},{"x":1.9600000083446503,"y":4.8521334087801735},{"x":2.0300000086426735,"y":4.9562426454872845},{"x":2.1000000089406967,"y":5.0603518821943965},{"x":2.17000000923872,"y":5.1644611189015075},{"x":2.240000009536743,"y":5.2685703556086185},{"x":2.3100000098347664,"y":5.3726795923157304},{"x":2.3800000101327896,"y":5.476788829022841},{"x":2.450000010430813,"y":5.5808980657299525},{"x":2.520000010728836,"y":5.6850073024370635},{"x":2.5900000110268593,"y":5.789116539144175},{"x":2.6600000113248825,"y":5.8932257758512865},{"x":2.7300000116229057,"y":5.997335012558397},{"x":2.800000011920929,"y":6.1014442492655085},{"x":2.870000012218952,"y":6.205553485972619},{"x":2.9400000125169754,"y":6.309662722679731},{"x":3.0100000128149986,"y":6.4137719593868425},{"x":3.080000013113022,"y":6.517881196093953},{"x":3.150000013411045,"y":6.621990432801065},{"x":3.2200000137090683,"y":6.726099669508175},{"x":3.2900000140070915,"y":6.830208906215287},{"x":3.3600000143051147,"y":6.934318142922399},{"x":3.430000014603138,"y":7.038427379629509},{"x":3.500000014901161,"y":7.142536616336621},{"x":3.5700000151991844,"y":7.246645853043731},{"x":3.6400000154972076,"y":7.350755089750843},{"x":3.710000015795231,"y":7.454864326457955},{"x":3.780000016093254,"y":7.558973563165065},{"x":3.8500000163912773,"y":7.663082799872177},{"x":3.9200000166893005,"y":7.767192036579287},{"x":3.9900000169873238,"y":7.871301273286399},{"x":4.060000017285347,"y":7.975410509993511},{"x":4.13000001758337,"y":8.07951974670062},{"x":4.200000017881393,"y":8.183628983407733},{"x":4.270000018179417,"y":8.287738220114845},{"x":4.34000001847744,"y":8.391847456821955},{"x":4.410000018775463,"y":8.495956693529067},{"x":4.480000019073486,"y":8.600065930236177},{"x":4.5500000193715096,"y":8.704175166943289},{"x":4.620000019669533,"y":8.8082844036504},{"x":4.690000019967556,"y":8.91239364035751},{"x":4.760000020265579,"y":9.016502877064623},{"x":4.8300000205636024,"y":9.120612113771733},{"x":4.900000020861626,"y":9.224721350478845},{"x":4.970000021159649,"y":9.328830587185957},{"x":5.040000021457672,"y":9.432939823893067},{"x":5.110000021755695,"y":9.537049060600179},{"x":5.180000022053719,"y":9.641158297307289},{"x":5.250000022351742,"y":9.7452675340144},{"x":5.320000022649765,"y":9.849376770721513},{"x":5.390000022947788,"y":9.953486007428623},{"x":5.4600000232458115,"y":10.057595244135735},{"x":5.530000023543835,"y":10.161704480842847},{"x":5.600000023841858,"y":10.265813717549957},{"x":5.670000024139881,"y":10.369922954257069},{"x":5.740000024437904,"y":10.474032190964179},{"x":5.810000024735928,"y":10.57814142767129},{"x":5.880000025033951,"y":10.682250664378403},{"x":5.950000025331974,"y":10.786359901085513},{"x":6.020000025629997,"y":10.890469137792625},{"x":6.0900000259280205,"y":10.994578374499735},{"x":6.160000026226044,"y":11.098687611206847},{"x":6.230000026524067,"y":11.202796847913959},{"x":6.30000002682209,"y":11.306906084621069},{"x":6.370000027120113,"y":11.41101532132818},{"x":6.440000027418137,"y":11.515124558035291},{"x":6.51000002771616,"y":11.619233794742403},{"x":6.580000028014183,"y":11.723343031449515},{"x":6.650000028312206,"y":11.827452268156625},{"x":6.7200000286102295,"y":11.931561504863737},{"x":6.790000028908253,"y":12.035670741570847},{"x":6.860000029206276,"y":12.139779978277959},{"x":6.930000029504299,"y":12.24388921498507}]},{"name":"090aedc4-87e4-4193-8d48-d81fa152ba87","values":[{"x":1.0,"y":2.1},{"x":2.0,"y":3.9},{"x":3.0,"y":5.3},{"x":4.0,"y":7.7},{"x":5.0,"y":10.2},{"x":6.0,"y":12.9}]}],"marks":[{"type":"line","from":{"data":"2c6f19ad-3e67-466c-a341-9e413c97f776"},"properties":{"enter":{"x":{"scale":"x","field":"data.x"},"y":{"scale":"y","field":"data.y"},"stroke":{"value":"#FF29D2"},"strokeWidth":{"value":2},"strokeOpacity":{"value":1}}}},{"type":"symbol","from":{"data":"090aedc4-87e4-4193-8d48-d81fa152ba87"},"properties":{"enter":{"x":{"scale":"x","field":"data.x"},"y":{"scale":"y","field":"data.y"},"fill":{"value":"steelblue"},"fillOpacity":{"value":1}},"update":{"shape":"circle","size":{"value":70},"stroke":{"value":"transparent"}},"hover":{"size":{"value":210},"stroke":{"value":"white"}}}}]},"value":"#gorilla_repl.vega.VegaView{:content {:width 400, :height 247.2188, :padding {:top 10, :left 55, :bottom 40, :right 10}, :scales [{:name \"x\", :type \"linear\", :range \"width\", :zero false, :domain {:data \"2c6f19ad-3e67-466c-a341-9e413c97f776\", :field \"data.x\"}} {:name \"y\", :type \"linear\", :range \"height\", :nice true, :zero false, :domain {:data \"2c6f19ad-3e67-466c-a341-9e413c97f776\", :field \"data.y\"}}], :axes [{:type \"x\", :scale \"x\"} {:type \"y\", :scale \"y\"}], :data ({:name \"2c6f19ad-3e67-466c-a341-9e413c97f776\", :values ({:x 0, :y 1.9370747809810598} {:x 0.07000000029802322, :y 2.041184017688171} {:x 0.14000000059604645, :y 2.1452932543952823} {:x 0.21000000089406967, :y 2.2494024911023933} {:x 0.2800000011920929, :y 2.353511727809505} {:x 0.3500000014901161, :y 2.457620964516616} {:x 0.42000000178813934, :y 2.5617302012237273} {:x 0.49000000208616257, :y 2.6658394379308383} {:x 0.5600000023841858, :y 2.7699486746379494} {:x 0.630000002682209, :y 2.874057911345061} {:x 0.7000000029802322, :y 2.978167148052172} {:x 0.7700000032782555, :y 3.0822763847592833} {:x 0.8400000035762787, :y 3.1863856214663944} {:x 0.9100000038743019, :y 3.2904948581735054} {:x 0.9800000041723251, :y 3.3946040948806164} {:x 1.0500000044703484, :y 3.498713331587728} {:x 1.1200000047683716, :y 3.6028225682948394} {:x 1.1900000050663948, :y 3.7069318050019504} {:x 1.260000005364418, :y 3.8110410417090614} {:x 1.3300000056624413, :y 3.915150278416173} {:x 1.4000000059604645, :y 4.019259515123284} {:x 1.4700000062584877, :y 4.123368751830395} {:x 1.540000006556511, :y 4.2274779885375064} {:x 1.6100000068545341, :y 4.3315872252446175} {:x 1.6800000071525574, :y 4.4356964619517285} {:x 1.7500000074505806, :y 4.53980569865884} {:x 1.8200000077486038, :y 4.6439149353659515} {:x 1.890000008046627, :y 4.7480241720730625} {:x 1.9600000083446503, :y 4.8521334087801735} {:x 2.0300000086426735, :y 4.9562426454872845} {:x 2.1000000089406967, :y 5.0603518821943965} {:x 2.17000000923872, :y 5.1644611189015075} {:x 2.240000009536743, :y 5.2685703556086185} {:x 2.3100000098347664, :y 5.3726795923157304} {:x 2.3800000101327896, :y 5.476788829022841} {:x 2.450000010430813, :y 5.5808980657299525} {:x 2.520000010728836, :y 5.6850073024370635} {:x 2.5900000110268593, :y 5.789116539144175} {:x 2.6600000113248825, :y 5.8932257758512865} {:x 2.7300000116229057, :y 5.997335012558397} {:x 2.800000011920929, :y 6.1014442492655085} {:x 2.870000012218952, :y 6.205553485972619} {:x 2.9400000125169754, :y 6.309662722679731} {:x 3.0100000128149986, :y 6.4137719593868425} {:x 3.080000013113022, :y 6.517881196093953} {:x 3.150000013411045, :y 6.621990432801065} {:x 3.2200000137090683, :y 6.726099669508175} {:x 3.2900000140070915, :y 6.830208906215287} {:x 3.3600000143051147, :y 6.934318142922399} {:x 3.430000014603138, :y 7.038427379629509} {:x 3.500000014901161, :y 7.142536616336621} {:x 3.5700000151991844, :y 7.246645853043731} {:x 3.6400000154972076, :y 7.350755089750843} {:x 3.710000015795231, :y 7.454864326457955} {:x 3.780000016093254, :y 7.558973563165065} {:x 3.8500000163912773, :y 7.663082799872177} {:x 3.9200000166893005, :y 7.767192036579287} {:x 3.9900000169873238, :y 7.871301273286399} {:x 4.060000017285347, :y 7.975410509993511} {:x 4.13000001758337, :y 8.07951974670062} {:x 4.200000017881393, :y 8.183628983407733} {:x 4.270000018179417, :y 8.287738220114845} {:x 4.34000001847744, :y 8.391847456821955} {:x 4.410000018775463, :y 8.495956693529067} {:x 4.480000019073486, :y 8.600065930236177} {:x 4.5500000193715096, :y 8.704175166943289} {:x 4.620000019669533, :y 8.8082844036504} {:x 4.690000019967556, :y 8.91239364035751} {:x 4.760000020265579, :y 9.016502877064623} {:x 4.8300000205636024, :y 9.120612113771733} {:x 4.900000020861626, :y 9.224721350478845} {:x 4.970000021159649, :y 9.328830587185957} {:x 5.040000021457672, :y 9.432939823893067} {:x 5.110000021755695, :y 9.537049060600179} {:x 5.180000022053719, :y 9.641158297307289} {:x 5.250000022351742, :y 9.7452675340144} {:x 5.320000022649765, :y 9.849376770721513} {:x 5.390000022947788, :y 9.953486007428623} {:x 5.4600000232458115, :y 10.057595244135735} {:x 5.530000023543835, :y 10.161704480842847} {:x 5.600000023841858, :y 10.265813717549957} {:x 5.670000024139881, :y 10.369922954257069} {:x 5.740000024437904, :y 10.474032190964179} {:x 5.810000024735928, :y 10.57814142767129} {:x 5.880000025033951, :y 10.682250664378403} {:x 5.950000025331974, :y 10.786359901085513} {:x 6.020000025629997, :y 10.890469137792625} {:x 6.0900000259280205, :y 10.994578374499735} {:x 6.160000026226044, :y 11.098687611206847} {:x 6.230000026524067, :y 11.202796847913959} {:x 6.30000002682209, :y 11.306906084621069} {:x 6.370000027120113, :y 11.41101532132818} {:x 6.440000027418137, :y 11.515124558035291} {:x 6.51000002771616, :y 11.619233794742403} {:x 6.580000028014183, :y 11.723343031449515} {:x 6.650000028312206, :y 11.827452268156625} {:x 6.7200000286102295, :y 11.931561504863737} {:x 6.790000028908253, :y 12.035670741570847} {:x 6.860000029206276, :y 12.139779978277959} {:x 6.930000029504299, :y 12.24388921498507})} {:name \"090aedc4-87e4-4193-8d48-d81fa152ba87\", :values ({:x 1.0, :y 2.1} {:x 2.0, :y 3.9} {:x 3.0, :y 5.3} {:x 4.0, :y 7.7} {:x 5.0, :y 10.2} {:x 6.0, :y 12.9})}), :marks ({:type \"line\", :from {:data \"2c6f19ad-3e67-466c-a341-9e413c97f776\"}, :properties {:enter {:x {:scale \"x\", :field \"data.x\"}, :y {:scale \"y\", :field \"data.y\"}, :stroke {:value \"#FF29D2\"}, :strokeWidth {:value 2}, :strokeOpacity {:value 1}}}} {:type \"symbol\", :from {:data \"090aedc4-87e4-4193-8d48-d81fa152ba87\"}, :properties {:enter {:x {:scale \"x\", :field \"data.x\"}, :y {:scale \"y\", :field \"data.y\"}, :fill {:value \"steelblue\"}, :fillOpacity {:value 1}}, :update {:shape \"circle\", :size {:value 70}, :stroke {:value \"transparent\"}}, :hover {:size {:value 210}, :stroke {:value \"white\"}}}})}}"}
;; <=

;; **
;;; ## Beta-Bernoulli coin flip.
;;; 
;;; The true posterior distribution in this example should be a distribution Beta(2, 1), with mean 0.66. 
;; **

;; @@
(def coinflip
  (foppl-query
    (let [p (sample (beta 1 1))
          d (bernoulli p)]
      (observe d 1)
      p)))

(foppl/print-graph (first coinflip))
;; @@
;; ->
;;; Vertices V: #{x29882 x29883}
;;; 
;;; Arcs A: #{[x29882 x29883]}
;;; 
;;; Conditional densities P:
;;; x29882 -&gt; (fn [] (beta 1 1))
;;; x29883 -&gt; (fn [x29882] (bernoulli x29882))
;;; 
;;; Observed values O:
;;; x29883 -&gt; 1; (fn [] true)
;;; 
;; <-
;; =>
;;; {"type":"html","content":"<span class='clj-nil'>nil</span>","value":"nil"}
;; <=

;; @@
(def coinflip-posterior (take 1000 (drop 500 (gibbs/gibbs-seq coinflip))))

(plot/histogram coinflip-posterior :plot-range [[0 1] :all])

(mean coinflip-posterior)
;; @@
;; =>
;;; {"type":"html","content":"<span class='clj-double'>0.6780582159145541</span>","value":"0.6780582159145541"}
;; <=

;; **
;;; ## Hidden Markov model.
;; **

;; @@
(def hmm-points [0.9 0.8 0.7 0.0 -0.025
                 5.0 2.0 0.1 0.0 0.13 
                 0.45 6.0 0.2 0.3 -1.0 -1.0])

(def hidden-markov-model
  (foppl-query

    ;; Define the init, transition, and observation distributions
    (defn get-init-params []
      (vector (/ 1. 3.) (/ 1. 3.) (/ 1. 3.)))

    (defn get-trans-params [k]
      (nth (vector (vector 0.1  0.5  0.4 )
                   (vector 0.2  0.2  0.6 )
                   (vector 0.15 0.15 0.7 )) k))

    (defn get-obs-dist [k]
      (nth (vector (normal -1 1)
                   (normal  1 1)
                   (normal  0 1)) k))

    ;; Function to step through HMM and sample latent state
    (defn hmm-step [n states]
      (let [next-state (sample (discrete (get-trans-params (last states))))]
        (observe (get-obs-dist next-state) (get hmm-points n))
        (conj states next-state)))

    ;; Loop through the data
    (let [init-state (sample (discrete (get-init-params)))]
      (loop 16 (vector init-state) hmm-step))))
;; @@
;; =>
;;; {"type":"html","content":"<span class='clj-var'>#&#x27;foppl-bugs/hidden-markov-model</span>","value":"#'foppl-bugs/hidden-markov-model"}
;; <=

;; @@
(def hmm-posterior (take 1000 (take-nth 10 (drop 500 (gibbs/gibbs-seq hidden-markov-model)))))
;; @@
;; =>
;;; {"type":"html","content":"<span class='clj-var'>#&#x27;foppl-bugs/hmm-posterior</span>","value":"#'foppl-bugs/hmm-posterior"}
;; <=

;; **
;;; This plot shows the marginal probability of being in each state at each timestep.
;;; 
;;; *TODO* need to check whether these are actually correct marginals.
;; **

;; @@
(let [p0 (mean (mat/mul (mat/eq hmm-posterior 0) 1.0) 0)
      p1 (mean (mat/mul (mat/eq hmm-posterior 1) 1.0) 0)]
  (plot/compose
    (plot/list-plot p0 :joined true :color :red :plot-range [:all [0 1]])
    (plot/list-plot p1 :joined true :color :blue)
    (plot/list-plot (mat/sub 1.0 (mat/add p0 p1)) :joined true :color :green)))
;; @@
;; =>
;;; {"type":"vega","content":{"width":400,"height":247.2187957763672,"padding":{"top":10,"left":55,"bottom":40,"right":10},"scales":[{"name":"x","type":"linear","range":"width","zero":false,"domain":{"data":"0914a866-ebab-4483-a0ff-dc41e9c1d3c1","field":"data.x"}},{"name":"y","type":"linear","range":"height","nice":true,"zero":false,"domain":[0,1]}],"axes":[{"type":"x","scale":"x"},{"type":"y","scale":"y"}],"data":[{"name":"0914a866-ebab-4483-a0ff-dc41e9c1d3c1","values":[{"x":0,"y":0.339},{"x":1,"y":0.006},{"x":2,"y":0.002},{"x":3,"y":0.01},{"x":4,"y":0.018000000000000002},{"x":5,"y":0.091},{"x":6,"y":0.0},{"x":7,"y":0.013000000000000001},{"x":8,"y":0.024},{"x":9,"y":0.017},{"x":10,"y":0.011},{"x":11,"y":0.029},{"x":12,"y":0.0},{"x":13,"y":0.037},{"x":14,"y":0.012},{"x":15,"y":0.045},{"x":16,"y":0.084}]},{"name":"ca257aed-a0dc-43c2-8b46-b13e7aed8923","values":[{"x":0,"y":0.314},{"x":1,"y":0.322},{"x":2,"y":0.058},{"x":3,"y":0.048},{"x":4,"y":0.05},{"x":5,"y":0.054},{"x":6,"y":0.8270000000000001},{"x":7,"y":0.292},{"x":8,"y":0.045},{"x":9,"y":0.033},{"x":10,"y":0.022},{"x":11,"y":0.036000000000000004},{"x":12,"y":0.936},{"x":13,"y":0.055},{"x":14,"y":0.077},{"x":15,"y":0.013000000000000001},{"x":16,"y":0.024}]},{"name":"53ca883a-f0e8-47ce-b81b-05c7d318af0a","values":[{"x":0,"y":0.347},{"x":1,"y":0.6719999999999999},{"x":2,"y":0.94},{"x":3,"y":0.942},{"x":4,"y":0.9319999999999999},{"x":5,"y":0.855},{"x":6,"y":0.17299999999999993},{"x":7,"y":0.6950000000000001},{"x":8,"y":0.931},{"x":9,"y":0.95},{"x":10,"y":0.967},{"x":11,"y":0.935},{"x":12,"y":0.06399999999999995},{"x":13,"y":0.908},{"x":14,"y":0.911},{"x":15,"y":0.942},{"x":16,"y":0.892}]}],"marks":[{"type":"line","from":{"data":"0914a866-ebab-4483-a0ff-dc41e9c1d3c1"},"properties":{"enter":{"x":{"scale":"x","field":"data.x"},"y":{"scale":"y","field":"data.y"},"stroke":{"value":"red"},"strokeWidth":{"value":2},"strokeOpacity":{"value":1}}}},{"type":"line","from":{"data":"ca257aed-a0dc-43c2-8b46-b13e7aed8923"},"properties":{"enter":{"x":{"scale":"x","field":"data.x"},"y":{"scale":"y","field":"data.y"},"stroke":{"value":"blue"},"strokeWidth":{"value":2},"strokeOpacity":{"value":1}}}},{"type":"line","from":{"data":"53ca883a-f0e8-47ce-b81b-05c7d318af0a"},"properties":{"enter":{"x":{"scale":"x","field":"data.x"},"y":{"scale":"y","field":"data.y"},"stroke":{"value":"green"},"strokeWidth":{"value":2},"strokeOpacity":{"value":1}}}}]},"value":"#gorilla_repl.vega.VegaView{:content {:width 400, :height 247.2188, :padding {:top 10, :left 55, :bottom 40, :right 10}, :scales [{:name \"x\", :type \"linear\", :range \"width\", :zero false, :domain {:data \"0914a866-ebab-4483-a0ff-dc41e9c1d3c1\", :field \"data.x\"}} {:name \"y\", :type \"linear\", :range \"height\", :nice true, :zero false, :domain [0 1]}], :axes [{:type \"x\", :scale \"x\"} {:type \"y\", :scale \"y\"}], :data ({:name \"0914a866-ebab-4483-a0ff-dc41e9c1d3c1\", :values ({:x 0, :y 0.339} {:x 1, :y 0.006} {:x 2, :y 0.002} {:x 3, :y 0.01} {:x 4, :y 0.018000000000000002} {:x 5, :y 0.091} {:x 6, :y 0.0} {:x 7, :y 0.013000000000000001} {:x 8, :y 0.024} {:x 9, :y 0.017} {:x 10, :y 0.011} {:x 11, :y 0.029} {:x 12, :y 0.0} {:x 13, :y 0.037} {:x 14, :y 0.012} {:x 15, :y 0.045} {:x 16, :y 0.084})} {:name \"ca257aed-a0dc-43c2-8b46-b13e7aed8923\", :values ({:x 0, :y 0.314} {:x 1, :y 0.322} {:x 2, :y 0.058} {:x 3, :y 0.048} {:x 4, :y 0.05} {:x 5, :y 0.054} {:x 6, :y 0.8270000000000001} {:x 7, :y 0.292} {:x 8, :y 0.045} {:x 9, :y 0.033} {:x 10, :y 0.022} {:x 11, :y 0.036000000000000004} {:x 12, :y 0.936} {:x 13, :y 0.055} {:x 14, :y 0.077} {:x 15, :y 0.013000000000000001} {:x 16, :y 0.024})} {:name \"53ca883a-f0e8-47ce-b81b-05c7d318af0a\", :values ({:x 0, :y 0.347} {:x 1, :y 0.6719999999999999} {:x 2, :y 0.94} {:x 3, :y 0.942} {:x 4, :y 0.9319999999999999} {:x 5, :y 0.855} {:x 6, :y 0.17299999999999993} {:x 7, :y 0.6950000000000001} {:x 8, :y 0.931} {:x 9, :y 0.95} {:x 10, :y 0.967} {:x 11, :y 0.935} {:x 12, :y 0.06399999999999995} {:x 13, :y 0.908} {:x 14, :y 0.911} {:x 15, :y 0.942} {:x 16, :y 0.892})}), :marks ({:type \"line\", :from {:data \"0914a866-ebab-4483-a0ff-dc41e9c1d3c1\"}, :properties {:enter {:x {:scale \"x\", :field \"data.x\"}, :y {:scale \"y\", :field \"data.y\"}, :stroke {:value :red}, :strokeWidth {:value 2}, :strokeOpacity {:value 1}}}} {:type \"line\", :from {:data \"ca257aed-a0dc-43c2-8b46-b13e7aed8923\"}, :properties {:enter {:x {:scale \"x\", :field \"data.x\"}, :y {:scale \"y\", :field \"data.y\"}, :stroke {:value :blue}, :strokeWidth {:value 2}, :strokeOpacity {:value 1}}}} {:type \"line\", :from {:data \"53ca883a-f0e8-47ce-b81b-05c7d318af0a\"}, :properties {:enter {:x {:scale \"x\", :field \"data.x\"}, :y {:scale \"y\", :field \"data.y\"}, :stroke {:value :green}, :strokeWidth {:value 2}, :strokeOpacity {:value 1}}}})}}"}
;; <=

;; **
;;; ## Gaussian mixture model.
;; **

;; @@
(def gaussian-mixture-model
  (foppl-query
    (defn sample-likelihoods [_ likes]
      (let [precision (sample (gamma 1.0 1.0))
            mean (sample (normal 0.0 precision))
            sigma (/ (sqrt precision))]
        (conj likes
              (normal mean sigma))))

    (defn sample-components [_ zs prior]
      (let [z (sample prior)]
        (conj zs z)))

    (defn observe-data [n _ ys zs likes]
      (let [y (nth ys n)
            z (nth zs n)]
        (observe (nth likes z) y)
        nil))

    (let [ys (vector 1.1 2.1 2.0 1.9 0.0 -0.1 -0.05)
          z-prior (discrete 
                    (sample (dirichlet (vector 1.0 1.0 1.0))))
          zs (loop 7 (vector) sample-components z-prior)
          likes (loop 3 (vector) sample-likelihoods)]
      (loop 7 nil observe-data ys zs likes)
      zs)))

(foppl/print-graph (first gaussian-mixture-model))
;; @@
;; ->
;;; Vertices V: #{x30747 x30814 x30744 x30763 x30821 x30729 x30758 x30732 x30738 x30741 x30769 x30786 x30793 x30764 x30807 x30800 x30735 x30779 x30757 x30750 x30770}
;;; 
;;; Arcs A: #{[x30729 x30744] [x30769 x30793] [x30757 x30758] [x30764 x30814] [x30769 x30770] [x30763 x30764] [x30750 x30821] [x30764 x30800] [x30744 x30807] [x30769 x30800] [x30770 x30786] [x30757 x30807] [x30757 x30793] [x30763 x30807] [x30758 x30779] [x30758 x30807] [x30729 x30738] [x30758 x30786] [x30764 x30821] [x30757 x30779] [x30763 x30793] [x30757 x30800] [x30770 x30807] [x30758 x30800] [x30764 x30793] [x30763 x30786] [x30764 x30786] [x30763 x30821] [x30757 x30814] [x30758 x30793] [x30770 x30793] [x30738 x30793] [x30764 x30807] [x30757 x30821] [x30769 x30786] [x30764 x30779] [x30729 x30732] [x30758 x30814] [x30729 x30735] [x30732 x30779] [x30770 x30779] [x30741 x30800] [x30729 x30750] [x30747 x30814] [x30770 x30821] [x30763 x30779] [x30763 x30814] [x30729 x30747] [x30758 x30821] [x30763 x30800] [x30757 x30786] [x30769 x30779] [x30735 x30786] [x30770 x30800] [x30769 x30821] [x30770 x30814] [x30769 x30814] [x30729 x30741] [x30769 x30807]}
;;; 
;;; Conditional densities P:
;;; x30747 -&gt; (fn [x30729] (discrete x30729))
;;; x30814 -&gt; (fn [x30764 x30747 x30757 x30770 x30758 x30763 x30769] (nth [(normal x30758 (/ (sqrt x30757))) (normal x30764 (/ (sqrt x30763))) (normal x30770 (/ (sqrt x30769)))] x30747))
;;; x30744 -&gt; (fn [x30729] (discrete x30729))
;;; x30763 -&gt; (fn [] (gamma 1.0 1.0))
;;; x30821 -&gt; (fn [x30764 x30757 x30770 x30750 x30758 x30763 x30769] (nth [(normal x30758 (/ (sqrt x30757))) (normal x30764 (/ (sqrt x30763))) (normal x30770 (/ (sqrt x30769)))] x30750))
;;; x30729 -&gt; (fn [] (dirichlet [1.0 1.0 1.0]))
;;; x30758 -&gt; (fn [x30757] (normal 0.0 x30757))
;;; x30732 -&gt; (fn [x30729] (discrete x30729))
;;; x30738 -&gt; (fn [x30729] (discrete x30729))
;;; x30741 -&gt; (fn [x30729] (discrete x30729))
;;; x30769 -&gt; (fn [] (gamma 1.0 1.0))
;;; x30786 -&gt; (fn [x30764 x30735 x30757 x30770 x30758 x30763 x30769] (nth [(normal x30758 (/ (sqrt x30757))) (normal x30764 (/ (sqrt x30763))) (normal x30770 (/ (sqrt x30769)))] x30735))
;;; x30793 -&gt; (fn [x30764 x30757 x30770 x30758 x30763 x30738 x30769] (nth [(normal x30758 (/ (sqrt x30757))) (normal x30764 (/ (sqrt x30763))) (normal x30770 (/ (sqrt x30769)))] x30738))
;;; x30764 -&gt; (fn [x30763] (normal 0.0 x30763))
;;; x30807 -&gt; (fn [x30764 x30757 x30770 x30758 x30744 x30763 x30769] (nth [(normal x30758 (/ (sqrt x30757))) (normal x30764 (/ (sqrt x30763))) (normal x30770 (/ (sqrt x30769)))] x30744))
;;; x30800 -&gt; (fn [x30764 x30741 x30757 x30770 x30758 x30763 x30769] (nth [(normal x30758 (/ (sqrt x30757))) (normal x30764 (/ (sqrt x30763))) (normal x30770 (/ (sqrt x30769)))] x30741))
;;; x30735 -&gt; (fn [x30729] (discrete x30729))
;;; x30779 -&gt; (fn [x30764 x30757 x30770 x30732 x30758 x30763 x30769] (nth [(normal x30758 (/ (sqrt x30757))) (normal x30764 (/ (sqrt x30763))) (normal x30770 (/ (sqrt x30769)))] x30732))
;;; x30757 -&gt; (fn [] (gamma 1.0 1.0))
;;; x30750 -&gt; (fn [x30729] (discrete x30729))
;;; x30770 -&gt; (fn [x30769] (normal 0.0 x30769))
;;; 
;;; Observed values O:
;;; x30779 -&gt; 1.1; (fn [] true)
;;; x30786 -&gt; 2.1; (fn [] true)
;;; x30793 -&gt; 2.0; (fn [] true)
;;; x30800 -&gt; 1.9; (fn [] true)
;;; x30807 -&gt; 0.0; (fn [] true)
;;; x30814 -&gt; -0.1; (fn [] true)
;;; x30821 -&gt; -0.05; (fn [] true)
;;; 
;; <-
;; =>
;;; {"type":"html","content":"<span class='clj-nil'>nil</span>","value":"nil"}
;; <=

;; **
;;; *TODO* figure out what to check here, to see if inference works. Note that this Gibbs sampler is not likely to mix well.
;;; 
;;; Right now, just making a histogram over the number of included components in the model...
;; **

;; @@
(def gmm-num-components 
  (map #(count (set %)) 
       (take 1000 (take-nth 10 (drop 500 (gibbs/gibbs-seq gaussian-mixture-model))))))

(into (sorted-map) (frequencies gmm-num-components))
;; @@
;; =>
;;; {"type":"list-like","open":"<span class='clj-map'>{</span>","close":"<span class='clj-map'>}</span>","separator":", ","items":[{"type":"list-like","open":"","close":"","separator":" ","items":[{"type":"html","content":"<span class='clj-unkown'>1</span>","value":"1"},{"type":"html","content":"<span class='clj-long'>774</span>","value":"774"}],"value":"[1 774]"},{"type":"list-like","open":"","close":"","separator":" ","items":[{"type":"html","content":"<span class='clj-unkown'>2</span>","value":"2"},{"type":"html","content":"<span class='clj-long'>211</span>","value":"211"}],"value":"[2 211]"},{"type":"list-like","open":"","close":"","separator":" ","items":[{"type":"html","content":"<span class='clj-unkown'>3</span>","value":"3"},{"type":"html","content":"<span class='clj-long'>15</span>","value":"15"}],"value":"[3 15]"}],"value":"{1 774, 2 211, 3 15}"}
;; <=

;; **
;;; # More examples to come
;;; 
;;; In particular, we need to test on an example in which observe statements interact with control flow.
;; **

;; @@
(def branching-query
  (foppl-query
    (defn norm-gamma [m l a b]
      (let [tau (sample (gamma a b))
            sigma (/ (sqrt tau))
            mu (sample (normal m (/ sigma (sqrt l))))]
        (normal mu sigma)))

    (let [d0 (norm-gamma 0.0 0.1 1.0 1.0)
          z (sample (bernoulli 0.5))]
      (if (= z 0)
        (observe d0 0.5)
        (observe (norm-gamma 1.0 0.1 1.0 1.0) 0.5))
      z)))

(foppl/print-graph (first branching-query))
;; @@
;; ->
;;; Vertices V: #{x31026 x31019 x31022 x31012 x31025 x31018 x31015}
;;; 
;;; Arcs A: #{[x31025 x31026] [x31022 x31026] [x31012 x31019] [x31015 x31019] [x31012 x31015] [x31022 x31025]}
;;; 
;;; Conditional densities P:
;;; x31012 -&gt; (fn [] (gamma 1.0 1.0))
;;; x31015 -&gt; (fn [x31012] (normal 0.0 (/ (/ (sqrt x31012)) 0.31622776601683794)))
;;; x31018 -&gt; (fn [] (bernoulli 0.5))
;;; x31019 -&gt; (fn [x31015 x31012] (normal x31015 (/ (sqrt x31012))))
;;; x31022 -&gt; (fn [] (gamma 1.0 1.0))
;;; x31025 -&gt; (fn [x31022] (normal 1.0 (/ (/ (sqrt x31022)) 0.31622776601683794)))
;;; x31026 -&gt; (fn [x31022 x31025] (normal x31025 (/ (sqrt x31022))))
;;; 
;;; Observed values O:
;;; x31019 -&gt; 0.5; (fn [x31018] (= x31018 0))
;;; x31026 -&gt; 0.5; (fn [x31018] (not (= x31018 0)))
;;; 
;; <-
;; =>
;;; {"type":"html","content":"<span class='clj-nil'>nil</span>","value":"nil"}
;; <=

;; @@
(foppl/draw-from-prior branching-query)
;; @@
;; =>
;;; {"type":"list-like","open":"<span class='clj-record'>#foppl.core.Trace{</span>","close":"<span class='clj-record'>}</span>","separator":" ","items":[{"type":"list-like","open":"","close":"","separator":" ","items":[{"type":"html","content":"<span class='clj-keyword'>:rdb</span>","value":":rdb"},{"type":"list-like","open":"<span class='clj-map'>{</span>","close":"<span class='clj-map'>}</span>","separator":", ","items":[{"type":"list-like","open":"","close":"","separator":" ","items":[{"type":"html","content":"<span class='clj-symbol'>x31018</span>","value":"x31018"},{"type":"html","content":"<span class='clj-long'>0</span>","value":"0"}],"value":"[x31018 0]"},{"type":"list-like","open":"","close":"","separator":" ","items":[{"type":"html","content":"<span class='clj-symbol'>x31012</span>","value":"x31012"},{"type":"html","content":"<span class='clj-double'>1.157272287749359</span>","value":"1.157272287749359"}],"value":"[x31012 1.157272287749359]"},{"type":"list-like","open":"","close":"","separator":" ","items":[{"type":"html","content":"<span class='clj-symbol'>x31015</span>","value":"x31015"},{"type":"html","content":"<span class='clj-double'>-1.7669737438815172</span>","value":"-1.7669737438815172"}],"value":"[x31015 -1.7669737438815172]"},{"type":"list-like","open":"","close":"","separator":" ","items":[{"type":"html","content":"<span class='clj-symbol'>x31022</span>","value":"x31022"},{"type":"html","content":"<span class='clj-double'>0.9062433217499559</span>","value":"0.9062433217499559"}],"value":"[x31022 0.9062433217499559]"},{"type":"list-like","open":"","close":"","separator":" ","items":[{"type":"html","content":"<span class='clj-symbol'>x31025</span>","value":"x31025"},{"type":"html","content":"<span class='clj-double'>9.68274685123582</span>","value":"9.68274685123582"}],"value":"[x31025 9.68274685123582]"}],"value":"{x31018 0, x31012 1.157272287749359, x31015 -1.7669737438815172, x31022 0.9062433217499559, x31025 9.68274685123582}"}],"value":"[:rdb {x31018 0, x31012 1.157272287749359, x31015 -1.7669737438815172, x31022 0.9062433217499559, x31025 9.68274685123582}]"},{"type":"list-like","open":"","close":"","separator":" ","items":[{"type":"html","content":"<span class='clj-keyword'>:ordering</span>","value":":ordering"},{"type":"list-like","open":"<span class='clj-list'>(</span>","close":"<span class='clj-list'>)</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-symbol'>x31018</span>","value":"x31018"},{"type":"html","content":"<span class='clj-symbol'>x31012</span>","value":"x31012"},{"type":"html","content":"<span class='clj-symbol'>x31015</span>","value":"x31015"},{"type":"html","content":"<span class='clj-symbol'>x31022</span>","value":"x31022"},{"type":"html","content":"<span class='clj-symbol'>x31025</span>","value":"x31025"},{"type":"html","content":"<span class='clj-symbol'>x31019</span>","value":"x31019"},{"type":"html","content":"<span class='clj-symbol'>x31026</span>","value":"x31026"}],"value":"(x31018 x31012 x31015 x31022 x31025 x31019 x31026)"}],"value":"[:ordering (x31018 x31012 x31015 x31022 x31025 x31019 x31026)]"},{"type":"list-like","open":"","close":"","separator":" ","items":[{"type":"html","content":"<span class='clj-keyword'>:logprob</span>","value":":logprob"},{"type":"html","content":"<span class='clj-double'>-14.289680897076359</span>","value":"-14.289680897076359"}],"value":"[:logprob -14.289680897076359]"}],"value":"#foppl.core.Trace{:rdb {x31018 0, x31012 1.157272287749359, x31015 -1.7669737438815172, x31022 0.9062433217499559, x31025 9.68274685123582}, :ordering (x31018 x31012 x31015 x31022 x31025 x31019 x31026), :logprob -14.289680897076359}"}
;; <=

;; @@
(let [[[V A P O] E] branching-query]
  (:cond (first (vals O))))
;; @@
;; =>
;;; {"type":"list-like","open":"<span class='clj-record'>#foppl.core.ClojureFunction{</span>","close":"<span class='clj-record'>}</span>","separator":" ","items":[{"type":"list-like","open":"","close":"","separator":" ","items":[{"type":"html","content":"<span class='clj-keyword'>:args</span>","value":":args"},{"type":"list-like","open":"<span class='clj-vector'>[</span>","close":"<span class='clj-vector'>]</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-symbol'>x31018</span>","value":"x31018"}],"value":"[x31018]"}],"value":"[:args [x31018]]"},{"type":"list-like","open":"","close":"","separator":" ","items":[{"type":"html","content":"<span class='clj-keyword'>:body</span>","value":":body"},{"type":"list-like","open":"<span class='clj-lazy-seq'>(</span>","close":"<span class='clj-lazy-seq'>)</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-symbol'>=</span>","value":"="},{"type":"html","content":"<span class='clj-symbol'>x31018</span>","value":"x31018"},{"type":"html","content":"<span class='clj-long'>0</span>","value":"0"}],"value":"(= x31018 0)"}],"value":"[:body (= x31018 0)]"},{"type":"list-like","open":"","close":"","separator":" ","items":[{"type":"html","content":"<span class='clj-keyword'>:fn</span>","value":":fn"},{"type":"html","content":"<span class='clj-unkown'>#function[foppl-bugs/eval31076$fn--31077]</span>","value":"#function[foppl-bugs/eval31076$fn--31077]"}],"value":"[:fn #function[foppl-bugs/eval31076$fn--31077]]"}],"value":"#foppl.core.ClojureFunction{:args [x31018], :body (= x31018 0), :fn #function[foppl-bugs/eval31076$fn--31077]}"}
;; <=

;; @@
(float (mean (drop 1000 (take 5000 (gibbs/gibbs-seq branching-query)))))
;; @@
;; =>
;;; {"type":"html","content":"<span class='clj-unkown'>0.58375</span>","value":"0.58375"}
;; <=

;; @@

;; @@
