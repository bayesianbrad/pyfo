;; gorilla-repl.fileformat = 1

;; **
;;; # Testing Gibbs sampling inference for basic FOPPL models
;; **

;; @@
(ns foppl-bugs
  (:require ;;[gorilla-plot.core :as plot]
            [foppl.desugar :refer :all]
            [foppl.core :as foppl :refer [foppl-query print-graph]]
            [foppl.gibbs :as gibbs]
            [clojure.core.matrix :as mat]
            :reload)
  (:use [anglican runtime]))
;; @@
;; =>
;;; {"type":"html","content":"<span class='clj-nil'>nil</span>","value":"nil"}
;; <=

;; **
;;; ## Linear regression.
;; **

;; @@
(def data [[1.0 2.1]
           [2.0 3.9]
           [3.0 5.3]
           [4.0 7.7]
           [5.0 10.2]
           [6.0 12.9]])

(def linear-regression
  (foppl-query
    (defn observe-data [_ data slope bias]
      (let [xn (first (first data))
            yn (second (first data))
            zn (+ (* slope xn) bias)]
        (observe (normal zn 1.0) yn)
        (rest data)))

    (let [slope (sample (normal 0.0 10.0))
          bias  (sample (normal 0.0 10.0))]
      (loop 6 data observe-data slope bias)
      (vector slope bias))))
;; @@
;; =>
;;; {"type":"html","content":"<span class='clj-var'>#&#x27;foppl-bugs/linear-regression</span>","value":"#'foppl-bugs/linear-regression"}
;; <=

;; @@
(let [[G E] linear-regression]
  (foppl/print-graph G)
  E)
;; @@
;; ->
;;; Vertices V: #{x34290 y34320 x34287 y34345 y34299 y34395 y34370 y34420}
;;;
;;; Arcs A: #{[x34290 y34299] [x34287 y34299] [x34287 y34395] [x34290 y34345] [x34290 y34395] [x34287 y34370] [x34290 y34420] [x34287 y34320] [x34287 y34345] [x34287 y34420] [x34290 y34370] [x34290 y34320]}
;;;
;;; Conditional densities P:
;;; x34287 -&gt; (fn [] (normal 0.0 10.0))
;;; x34290 -&gt; (fn [] (normal 0.0 10.0))
;;; y34299 -&gt; (fn [x34290 x34287] (normal (+ (* x34287 1.0) x34290) 1.0))
;;; y34320 -&gt; (fn [x34290 x34287] (normal (+ (* x34287 2.0) x34290) 1.0))
;;; y34345 -&gt; (fn [x34290 x34287] (normal (+ (* x34287 3.0) x34290) 1.0))
;;; y34370 -&gt; (fn [x34290 x34287] (normal (+ (* x34287 4.0) x34290) 1.0))
;;; y34395 -&gt; (fn [x34290 x34287] (normal (+ (* x34287 5.0) x34290) 1.0))
;;; y34420 -&gt; (fn [x34290 x34287] (normal (+ (* x34287 6.0) x34290) 1.0))
;;;
;;; Observed values O:
;;; y34299 -&gt; 2.1
;;; y34320 -&gt; 3.9
;;; y34345 -&gt; 5.3
;;; y34370 -&gt; 7.7
;;; y34395 -&gt; 10.2
;;; y34420 -&gt; 12.9
;;;
;; <-
;; =>
;;; {"type":"list-like","open":"<span class='clj-record'>#foppl.core.ClojureFunction{</span>","close":"<span class='clj-record'>}</span>","separator":" ","items":[{"type":"list-like","open":"","close":"","separator":" ","items":[{"type":"html","content":"<span class='clj-keyword'>:args</span>","value":":args"},{"type":"list-like","open":"<span class='clj-vector'>[</span>","close":"<span class='clj-vector'>]</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-symbol'>x34290</span>","value":"x34290"},{"type":"html","content":"<span class='clj-symbol'>x34287</span>","value":"x34287"}],"value":"[x34290 x34287]"}],"value":"[:args [x34290 x34287]]"},{"type":"list-like","open":"","close":"","separator":" ","items":[{"type":"html","content":"<span class='clj-keyword'>:body</span>","value":":body"},{"type":"list-like","open":"<span class='clj-vector'>[</span>","close":"<span class='clj-vector'>]</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-symbol'>x34287</span>","value":"x34287"},{"type":"html","content":"<span class='clj-symbol'>x34290</span>","value":"x34290"}],"value":"[x34287 x34290]"}],"value":"[:body [x34287 x34290]]"},{"type":"list-like","open":"","close":"","separator":" ","items":[{"type":"html","content":"<span class='clj-keyword'>:fn</span>","value":":fn"},{"type":"html","content":"<span class='clj-unkown'>#object[foppl_bugs$eval34432$fn__34433 0x6ab943b8 &quot;foppl_bugs$eval34432$fn__34433@6ab943b8&quot;]</span>","value":"#object[foppl_bugs$eval34432$fn__34433 0x6ab943b8 \"foppl_bugs$eval34432$fn__34433@6ab943b8\"]"}],"value":"[:fn #object[foppl_bugs$eval34432$fn__34433 0x6ab943b8 \"foppl_bugs$eval34432$fn__34433@6ab943b8\"]]"}],"value":"#foppl.core.ClojureFunction{:args [x34290 x34287], :body [x34287 x34290], :fn #object[foppl_bugs$eval34432$fn__34433 0x6ab943b8 \"foppl_bugs$eval34432$fn__34433@6ab943b8\"]}"}
;; <=

;; **
;;; Sampling from prior:
;; **

;; @@
(def prior-sample (foppl/draw-from-prior linear-regression))

(let [[m b] (foppl/get-output linear-regression prior-sample)]
  (plot/compose
    (plot/plot #(+ b (* m %)) [0 7])
    (plot/list-plot data)))

;; @@
;; =>
;;; {"type":"vega","content":{"width":400,"height":247.2187957763672,"padding":{"top":10,"left":55,"bottom":40,"right":10},"scales":[{"name":"x","type":"linear","range":"width","zero":false,"domain":{"data":"65d2a10f-1889-44ae-8387-93b18b918e95","field":"data.x"}},{"name":"y","type":"linear","range":"height","nice":true,"zero":false,"domain":{"data":"65d2a10f-1889-44ae-8387-93b18b918e95","field":"data.y"}}],"axes":[{"type":"x","scale":"x"},{"type":"y","scale":"y"}],"data":[{"name":"65d2a10f-1889-44ae-8387-93b18b918e95","values":[{"x":0,"y":-0.9324334818675127},{"x":0.07000000029802322,"y":-0.9566737662078643},{"x":0.14000000059604645,"y":-0.9809140505482159},{"x":0.21000000089406967,"y":-1.0051543348885674},{"x":0.2800000011920929,"y":-1.029394619228919},{"x":0.3500000014901161,"y":-1.0536349035692705},{"x":0.42000000178813934,"y":-1.0778751879096222},{"x":0.49000000208616257,"y":-1.1021154722499737},{"x":0.5600000023841858,"y":-1.1263557565903253},{"x":0.630000002682209,"y":-1.1505960409306768},{"x":0.7000000029802322,"y":-1.1748363252710283},{"x":0.7700000032782555,"y":-1.1990766096113799},{"x":0.8400000035762787,"y":-1.2233168939517314},{"x":0.9100000038743019,"y":-1.2475571782920831},{"x":0.9800000041723251,"y":-1.2717974626324346},{"x":1.0500000044703484,"y":-1.2960377469727862},{"x":1.1200000047683716,"y":-1.3202780313131377},{"x":1.1900000050663948,"y":-1.3445183156534894},{"x":1.260000005364418,"y":-1.368758599993841},{"x":1.3300000056624413,"y":-1.3929988843341925},{"x":1.4000000059604645,"y":-1.417239168674544},{"x":1.4700000062584877,"y":-1.4414794530148956},{"x":1.540000006556511,"y":-1.465719737355247},{"x":1.6100000068545341,"y":-1.4899600216955986},{"x":1.6800000071525574,"y":-1.5142003060359501},{"x":1.7500000074505806,"y":-1.5384405903763019},{"x":1.8200000077486038,"y":-1.5626808747166534},{"x":1.890000008046627,"y":-1.586921159057005},{"x":1.9600000083446503,"y":-1.6111614433973567},{"x":2.0300000086426735,"y":-1.6354017277377082},{"x":2.1000000089406967,"y":-1.6596420120780597},{"x":2.17000000923872,"y":-1.6838822964184113},{"x":2.240000009536743,"y":-1.7081225807587628},{"x":2.3100000098347664,"y":-1.7323628650991143},{"x":2.3800000101327896,"y":-1.7566031494394658},{"x":2.450000010430813,"y":-1.7808434337798174},{"x":2.520000010728836,"y":-1.805083718120169},{"x":2.5900000110268593,"y":-1.8293240024605206},{"x":2.6600000113248825,"y":-1.8535642868008722},{"x":2.7300000116229057,"y":-1.877804571141224},{"x":2.800000011920929,"y":-1.9020448554815754},{"x":2.870000012218952,"y":-1.926285139821927},{"x":2.9400000125169754,"y":-1.9505254241622785},{"x":3.0100000128149986,"y":-1.97476570850263},{"x":3.080000013113022,"y":-1.9990059928429815},{"x":3.150000013411045,"y":-2.023246277183333},{"x":3.2200000137090683,"y":-2.0474865615236846},{"x":3.2900000140070915,"y":-2.071726845864036},{"x":3.3600000143051147,"y":-2.0959671302043876},{"x":3.430000014603138,"y":-2.1202074145447396},{"x":3.500000014901161,"y":-2.144447698885091},{"x":3.5700000151991844,"y":-2.1686879832254427},{"x":3.6400000154972076,"y":-2.192928267565794},{"x":3.710000015795231,"y":-2.2171685519061457},{"x":3.780000016093254,"y":-2.2414088362464972},{"x":3.8500000163912773,"y":-2.2656491205868488},{"x":3.9200000166893005,"y":-2.2898894049272003},{"x":3.9900000169873238,"y":-2.314129689267552},{"x":4.060000017285347,"y":-2.3383699736079033},{"x":4.13000001758337,"y":-2.362610257948255},{"x":4.200000017881393,"y":-2.386850542288607},{"x":4.270000018179417,"y":-2.4110908266289584},{"x":4.34000001847744,"y":-2.43533111096931},{"x":4.410000018775463,"y":-2.4595713953096614},{"x":4.480000019073486,"y":-2.483811679650013},{"x":4.5500000193715096,"y":-2.5080519639903645},{"x":4.620000019669533,"y":-2.532292248330716},{"x":4.690000019967556,"y":-2.5565325326710675},{"x":4.760000020265579,"y":-2.580772817011419},{"x":4.8300000205636024,"y":-2.6050131013517706},{"x":4.900000020861626,"y":-2.629253385692122},{"x":4.970000021159649,"y":-2.6534936700324736},{"x":5.040000021457672,"y":-2.6777339543728256},{"x":5.110000021755695,"y":-2.701974238713177},{"x":5.180000022053719,"y":-2.7262145230535286},{"x":5.250000022351742,"y":-2.75045480739388},{"x":5.320000022649765,"y":-2.7746950917342317},{"x":5.390000022947788,"y":-2.798935376074583},{"x":5.4600000232458115,"y":-2.8231756604149347},{"x":5.530000023543835,"y":-2.8474159447552863},{"x":5.600000023841858,"y":-2.871656229095638},{"x":5.670000024139881,"y":-2.8958965134359893},{"x":5.740000024437904,"y":-2.920136797776341},{"x":5.810000024735928,"y":-2.9443770821166924},{"x":5.880000025033951,"y":-2.968617366457044},{"x":5.950000025331974,"y":-2.9928576507973954},{"x":6.020000025629997,"y":-3.0170979351377474},{"x":6.0900000259280205,"y":-3.041338219478099},{"x":6.160000026226044,"y":-3.0655785038184504},{"x":6.230000026524067,"y":-3.089818788158802},{"x":6.30000002682209,"y":-3.1140590724991535},{"x":6.370000027120113,"y":-3.138299356839505},{"x":6.440000027418137,"y":-3.1625396411798565},{"x":6.51000002771616,"y":-3.186779925520208},{"x":6.580000028014183,"y":-3.2110202098605596},{"x":6.650000028312206,"y":-3.235260494200911},{"x":6.7200000286102295,"y":-3.2595007785412626},{"x":6.790000028908253,"y":-3.2837410628816146},{"x":6.860000029206276,"y":-3.307981347221966},{"x":6.930000029504299,"y":-3.3322216315623177}]},{"name":"980828e3-1340-4bed-9572-1a7ade3115dc","values":[{"x":1.0,"y":2.1},{"x":2.0,"y":3.9},{"x":3.0,"y":5.3},{"x":4.0,"y":7.7},{"x":5.0,"y":10.2},{"x":6.0,"y":12.9}]}],"marks":[{"type":"line","from":{"data":"65d2a10f-1889-44ae-8387-93b18b918e95"},"properties":{"enter":{"x":{"scale":"x","field":"data.x"},"y":{"scale":"y","field":"data.y"},"stroke":{"value":"#FF29D2"},"strokeWidth":{"value":2},"strokeOpacity":{"value":1}}}},{"type":"symbol","from":{"data":"980828e3-1340-4bed-9572-1a7ade3115dc"},"properties":{"enter":{"x":{"scale":"x","field":"data.x"},"y":{"scale":"y","field":"data.y"},"fill":{"value":"steelblue"},"fillOpacity":{"value":1}},"update":{"shape":"circle","size":{"value":70},"stroke":{"value":"transparent"}},"hover":{"size":{"value":210},"stroke":{"value":"white"}}}}]},"value":"#gorilla_repl.vega.VegaView{:content {:width 400, :height 247.2188, :padding {:top 10, :left 55, :bottom 40, :right 10}, :scales [{:name \"x\", :type \"linear\", :range \"width\", :zero false, :domain {:data \"65d2a10f-1889-44ae-8387-93b18b918e95\", :field \"data.x\"}} {:name \"y\", :type \"linear\", :range \"height\", :nice true, :zero false, :domain {:data \"65d2a10f-1889-44ae-8387-93b18b918e95\", :field \"data.y\"}}], :axes [{:type \"x\", :scale \"x\"} {:type \"y\", :scale \"y\"}], :data ({:name \"65d2a10f-1889-44ae-8387-93b18b918e95\", :values ({:x 0, :y -0.9324334818675127} {:x 0.07000000029802322, :y -0.9566737662078643} {:x 0.14000000059604645, :y -0.9809140505482159} {:x 0.21000000089406967, :y -1.0051543348885674} {:x 0.2800000011920929, :y -1.029394619228919} {:x 0.3500000014901161, :y -1.0536349035692705} {:x 0.42000000178813934, :y -1.0778751879096222} {:x 0.49000000208616257, :y -1.1021154722499737} {:x 0.5600000023841858, :y -1.1263557565903253} {:x 0.630000002682209, :y -1.1505960409306768} {:x 0.7000000029802322, :y -1.1748363252710283} {:x 0.7700000032782555, :y -1.1990766096113799} {:x 0.8400000035762787, :y -1.2233168939517314} {:x 0.9100000038743019, :y -1.2475571782920831} {:x 0.9800000041723251, :y -1.2717974626324346} {:x 1.0500000044703484, :y -1.2960377469727862} {:x 1.1200000047683716, :y -1.3202780313131377} {:x 1.1900000050663948, :y -1.3445183156534894} {:x 1.260000005364418, :y -1.368758599993841} {:x 1.3300000056624413, :y -1.3929988843341925} {:x 1.4000000059604645, :y -1.417239168674544} {:x 1.4700000062584877, :y -1.4414794530148956} {:x 1.540000006556511, :y -1.465719737355247} {:x 1.6100000068545341, :y -1.4899600216955986} {:x 1.6800000071525574, :y -1.5142003060359501} {:x 1.7500000074505806, :y -1.5384405903763019} {:x 1.8200000077486038, :y -1.5626808747166534} {:x 1.890000008046627, :y -1.586921159057005} {:x 1.9600000083446503, :y -1.6111614433973567} {:x 2.0300000086426735, :y -1.6354017277377082} {:x 2.1000000089406967, :y -1.6596420120780597} {:x 2.17000000923872, :y -1.6838822964184113} {:x 2.240000009536743, :y -1.7081225807587628} {:x 2.3100000098347664, :y -1.7323628650991143} {:x 2.3800000101327896, :y -1.7566031494394658} {:x 2.450000010430813, :y -1.7808434337798174} {:x 2.520000010728836, :y -1.805083718120169} {:x 2.5900000110268593, :y -1.8293240024605206} {:x 2.6600000113248825, :y -1.8535642868008722} {:x 2.7300000116229057, :y -1.877804571141224} {:x 2.800000011920929, :y -1.9020448554815754} {:x 2.870000012218952, :y -1.926285139821927} {:x 2.9400000125169754, :y -1.9505254241622785} {:x 3.0100000128149986, :y -1.97476570850263} {:x 3.080000013113022, :y -1.9990059928429815} {:x 3.150000013411045, :y -2.023246277183333} {:x 3.2200000137090683, :y -2.0474865615236846} {:x 3.2900000140070915, :y -2.071726845864036} {:x 3.3600000143051147, :y -2.0959671302043876} {:x 3.430000014603138, :y -2.1202074145447396} {:x 3.500000014901161, :y -2.144447698885091} {:x 3.5700000151991844, :y -2.1686879832254427} {:x 3.6400000154972076, :y -2.192928267565794} {:x 3.710000015795231, :y -2.2171685519061457} {:x 3.780000016093254, :y -2.2414088362464972} {:x 3.8500000163912773, :y -2.2656491205868488} {:x 3.9200000166893005, :y -2.2898894049272003} {:x 3.9900000169873238, :y -2.314129689267552} {:x 4.060000017285347, :y -2.3383699736079033} {:x 4.13000001758337, :y -2.362610257948255} {:x 4.200000017881393, :y -2.386850542288607} {:x 4.270000018179417, :y -2.4110908266289584} {:x 4.34000001847744, :y -2.43533111096931} {:x 4.410000018775463, :y -2.4595713953096614} {:x 4.480000019073486, :y -2.483811679650013} {:x 4.5500000193715096, :y -2.5080519639903645} {:x 4.620000019669533, :y -2.532292248330716} {:x 4.690000019967556, :y -2.5565325326710675} {:x 4.760000020265579, :y -2.580772817011419} {:x 4.8300000205636024, :y -2.6050131013517706} {:x 4.900000020861626, :y -2.629253385692122} {:x 4.970000021159649, :y -2.6534936700324736} {:x 5.040000021457672, :y -2.6777339543728256} {:x 5.110000021755695, :y -2.701974238713177} {:x 5.180000022053719, :y -2.7262145230535286} {:x 5.250000022351742, :y -2.75045480739388} {:x 5.320000022649765, :y -2.7746950917342317} {:x 5.390000022947788, :y -2.798935376074583} {:x 5.4600000232458115, :y -2.8231756604149347} {:x 5.530000023543835, :y -2.8474159447552863} {:x 5.600000023841858, :y -2.871656229095638} {:x 5.670000024139881, :y -2.8958965134359893} {:x 5.740000024437904, :y -2.920136797776341} {:x 5.810000024735928, :y -2.9443770821166924} {:x 5.880000025033951, :y -2.968617366457044} {:x 5.950000025331974, :y -2.9928576507973954} {:x 6.020000025629997, :y -3.0170979351377474} {:x 6.0900000259280205, :y -3.041338219478099} {:x 6.160000026226044, :y -3.0655785038184504} {:x 6.230000026524067, :y -3.089818788158802} {:x 6.30000002682209, :y -3.1140590724991535} {:x 6.370000027120113, :y -3.138299356839505} {:x 6.440000027418137, :y -3.1625396411798565} {:x 6.51000002771616, :y -3.186779925520208} {:x 6.580000028014183, :y -3.2110202098605596} {:x 6.650000028312206, :y -3.235260494200911} {:x 6.7200000286102295, :y -3.2595007785412626} {:x 6.790000028908253, :y -3.2837410628816146} {:x 6.860000029206276, :y -3.307981347221966} {:x 6.930000029504299, :y -3.3322216315623177})} {:name \"980828e3-1340-4bed-9572-1a7ade3115dc\", :values ({:x 1.0, :y 2.1} {:x 2.0, :y 3.9} {:x 3.0, :y 5.3} {:x 4.0, :y 7.7} {:x 5.0, :y 10.2} {:x 6.0, :y 12.9})}), :marks ({:type \"line\", :from {:data \"65d2a10f-1889-44ae-8387-93b18b918e95\"}, :properties {:enter {:x {:scale \"x\", :field \"data.x\"}, :y {:scale \"y\", :field \"data.y\"}, :stroke {:value \"#FF29D2\"}, :strokeWidth {:value 2}, :strokeOpacity {:value 1}}}} {:type \"symbol\", :from {:data \"980828e3-1340-4bed-9572-1a7ade3115dc\"}, :properties {:enter {:x {:scale \"x\", :field \"data.x\"}, :y {:scale \"y\", :field \"data.y\"}, :fill {:value \"steelblue\"}, :fillOpacity {:value 1}}, :update {:shape \"circle\", :size {:value 70}, :stroke {:value \"transparent\"}}, :hover {:size {:value 210}, :stroke {:value \"white\"}}}})}}"}
;; <=

;; **
;;; ### Take 1000 gibbs steps, and look at the final sample
;; **

;; @@
(def samples (take 1000 (gibbs/gibbs-seq linear-regression)))

(let [[m b] (last samples)]
  (plot/compose
    (plot/plot #(+ b (* m %)) [0 7])
    (plot/list-plot data)))


;; @@
;; =>
;;; {"type":"vega","content":{"width":400,"height":247.2187957763672,"padding":{"top":10,"left":55,"bottom":40,"right":10},"scales":[{"name":"x","type":"linear","range":"width","zero":false,"domain":{"data":"06654fa0-633b-4a3c-90b0-74a734527fd9","field":"data.x"}},{"name":"y","type":"linear","range":"height","nice":true,"zero":false,"domain":{"data":"06654fa0-633b-4a3c-90b0-74a734527fd9","field":"data.y"}}],"axes":[{"type":"x","scale":"x"},{"type":"y","scale":"y"}],"data":[{"name":"06654fa0-633b-4a3c-90b0-74a734527fd9","values":[{"x":0,"y":0.5394417957466193},{"x":0.07000000029802322,"y":0.6763174128675258},{"x":0.14000000059604645,"y":0.8131930299884321},{"x":0.21000000089406967,"y":0.9500686471093385},{"x":0.2800000011920929,"y":1.086944264230245},{"x":0.3500000014901161,"y":1.2238198813511514},{"x":0.42000000178813934,"y":1.3606954984720576},{"x":0.49000000208616257,"y":1.4975711155929643},{"x":0.5600000023841858,"y":1.6344467327138705},{"x":0.630000002682209,"y":1.771322349834777},{"x":0.7000000029802322,"y":1.9081979669556834},{"x":0.7700000032782555,"y":2.04507358407659},{"x":0.8400000035762787,"y":2.1819492011974964},{"x":0.9100000038743019,"y":2.3188248183184026},{"x":0.9800000041723251,"y":2.455700435439309},{"x":1.0500000044703484,"y":2.5925760525602155},{"x":1.1200000047683716,"y":2.7294516696811217},{"x":1.1900000050663948,"y":2.8663272868020284},{"x":1.260000005364418,"y":3.0032029039229347},{"x":1.3300000056624413,"y":3.140078521043841},{"x":1.4000000059604645,"y":3.2769541381647476},{"x":1.4700000062584877,"y":3.413829755285654},{"x":1.540000006556511,"y":3.5507053724065605},{"x":1.6100000068545341,"y":3.6875809895274667},{"x":1.6800000071525574,"y":3.824456606648373},{"x":1.7500000074505806,"y":3.9613322237692796},{"x":1.8200000077486038,"y":4.098207840890186},{"x":1.890000008046627,"y":4.235083458011092},{"x":1.9600000083446503,"y":4.371959075131999},{"x":2.0300000086426735,"y":4.508834692252905},{"x":2.1000000089406967,"y":4.645710309373811},{"x":2.17000000923872,"y":4.782585926494718},{"x":2.240000009536743,"y":4.919461543615624},{"x":2.3100000098347664,"y":5.056337160736531},{"x":2.3800000101327896,"y":5.193212777857438},{"x":2.450000010430813,"y":5.330088394978343},{"x":2.520000010728836,"y":5.46696401209925},{"x":2.5900000110268593,"y":5.603839629220156},{"x":2.6600000113248825,"y":5.740715246341063},{"x":2.7300000116229057,"y":5.87759086346197},{"x":2.800000011920929,"y":6.014466480582875},{"x":2.870000012218952,"y":6.1513420977037825},{"x":2.9400000125169754,"y":6.288217714824688},{"x":3.0100000128149986,"y":6.425093331945595},{"x":3.080000013113022,"y":6.561968949066502},{"x":3.150000013411045,"y":6.698844566187407},{"x":3.2200000137090683,"y":6.8357201833083145},{"x":3.2900000140070915,"y":6.97259580042922},{"x":3.3600000143051147,"y":7.109471417550127},{"x":3.430000014603138,"y":7.246347034671032},{"x":3.500000014901161,"y":7.3832226517919395},{"x":3.5700000151991844,"y":7.520098268912847},{"x":3.6400000154972076,"y":7.656973886033752},{"x":3.710000015795231,"y":7.793849503154659},{"x":3.780000016093254,"y":7.930725120275564},{"x":3.8500000163912773,"y":8.067600737396472},{"x":3.9200000166893005,"y":8.204476354517379},{"x":3.9900000169873238,"y":8.341351971638284},{"x":4.060000017285347,"y":8.478227588759191},{"x":4.13000001758337,"y":8.615103205880096},{"x":4.200000017881393,"y":8.751978823001004},{"x":4.270000018179417,"y":8.888854440121909},{"x":4.34000001847744,"y":9.025730057242816},{"x":4.410000018775463,"y":9.162605674363723},{"x":4.480000019073486,"y":9.299481291484629},{"x":4.5500000193715096,"y":9.436356908605536},{"x":4.620000019669533,"y":9.573232525726441},{"x":4.690000019967556,"y":9.710108142847348},{"x":4.760000020265579,"y":9.846983759968255},{"x":4.8300000205636024,"y":9.98385937708916},{"x":4.900000020861626,"y":10.120734994210068},{"x":4.970000021159649,"y":10.257610611330973},{"x":5.040000021457672,"y":10.39448622845188},{"x":5.110000021755695,"y":10.531361845572787},{"x":5.180000022053719,"y":10.668237462693693},{"x":5.250000022351742,"y":10.8051130798146},{"x":5.320000022649765,"y":10.941988696935505},{"x":5.390000022947788,"y":11.078864314056412},{"x":5.4600000232458115,"y":11.21573993117732},{"x":5.530000023543835,"y":11.352615548298225},{"x":5.600000023841858,"y":11.489491165419132},{"x":5.670000024139881,"y":11.626366782540037},{"x":5.740000024437904,"y":11.763242399660944},{"x":5.810000024735928,"y":11.900118016781851},{"x":5.880000025033951,"y":12.036993633902757},{"x":5.950000025331974,"y":12.173869251023664},{"x":6.020000025629997,"y":12.31074486814457},{"x":6.0900000259280205,"y":12.447620485265476},{"x":6.160000026226044,"y":12.584496102386383},{"x":6.230000026524067,"y":12.721371719507289},{"x":6.30000002682209,"y":12.858247336628196},{"x":6.370000027120113,"y":12.995122953749101},{"x":6.440000027418137,"y":13.131998570870008},{"x":6.51000002771616,"y":13.268874187990914},{"x":6.580000028014183,"y":13.405749805111821},{"x":6.650000028312206,"y":13.542625422232728},{"x":6.7200000286102295,"y":13.679501039353633},{"x":6.790000028908253,"y":13.81637665647454},{"x":6.860000029206276,"y":13.953252273595446},{"x":6.930000029504299,"y":14.090127890716353}]},{"name":"44c8126a-4379-4828-827c-04f62b087e33","values":[{"x":1.0,"y":2.1},{"x":2.0,"y":3.9},{"x":3.0,"y":5.3},{"x":4.0,"y":7.7},{"x":5.0,"y":10.2},{"x":6.0,"y":12.9}]}],"marks":[{"type":"line","from":{"data":"06654fa0-633b-4a3c-90b0-74a734527fd9"},"properties":{"enter":{"x":{"scale":"x","field":"data.x"},"y":{"scale":"y","field":"data.y"},"stroke":{"value":"#FF29D2"},"strokeWidth":{"value":2},"strokeOpacity":{"value":1}}}},{"type":"symbol","from":{"data":"44c8126a-4379-4828-827c-04f62b087e33"},"properties":{"enter":{"x":{"scale":"x","field":"data.x"},"y":{"scale":"y","field":"data.y"},"fill":{"value":"steelblue"},"fillOpacity":{"value":1}},"update":{"shape":"circle","size":{"value":70},"stroke":{"value":"transparent"}},"hover":{"size":{"value":210},"stroke":{"value":"white"}}}}]},"value":"#gorilla_repl.vega.VegaView{:content {:width 400, :height 247.2188, :padding {:top 10, :left 55, :bottom 40, :right 10}, :scales [{:name \"x\", :type \"linear\", :range \"width\", :zero false, :domain {:data \"06654fa0-633b-4a3c-90b0-74a734527fd9\", :field \"data.x\"}} {:name \"y\", :type \"linear\", :range \"height\", :nice true, :zero false, :domain {:data \"06654fa0-633b-4a3c-90b0-74a734527fd9\", :field \"data.y\"}}], :axes [{:type \"x\", :scale \"x\"} {:type \"y\", :scale \"y\"}], :data ({:name \"06654fa0-633b-4a3c-90b0-74a734527fd9\", :values ({:x 0, :y 0.5394417957466193} {:x 0.07000000029802322, :y 0.6763174128675258} {:x 0.14000000059604645, :y 0.8131930299884321} {:x 0.21000000089406967, :y 0.9500686471093385} {:x 0.2800000011920929, :y 1.086944264230245} {:x 0.3500000014901161, :y 1.2238198813511514} {:x 0.42000000178813934, :y 1.3606954984720576} {:x 0.49000000208616257, :y 1.4975711155929643} {:x 0.5600000023841858, :y 1.6344467327138705} {:x 0.630000002682209, :y 1.771322349834777} {:x 0.7000000029802322, :y 1.9081979669556834} {:x 0.7700000032782555, :y 2.04507358407659} {:x 0.8400000035762787, :y 2.1819492011974964} {:x 0.9100000038743019, :y 2.3188248183184026} {:x 0.9800000041723251, :y 2.455700435439309} {:x 1.0500000044703484, :y 2.5925760525602155} {:x 1.1200000047683716, :y 2.7294516696811217} {:x 1.1900000050663948, :y 2.8663272868020284} {:x 1.260000005364418, :y 3.0032029039229347} {:x 1.3300000056624413, :y 3.140078521043841} {:x 1.4000000059604645, :y 3.2769541381647476} {:x 1.4700000062584877, :y 3.413829755285654} {:x 1.540000006556511, :y 3.5507053724065605} {:x 1.6100000068545341, :y 3.6875809895274667} {:x 1.6800000071525574, :y 3.824456606648373} {:x 1.7500000074505806, :y 3.9613322237692796} {:x 1.8200000077486038, :y 4.098207840890186} {:x 1.890000008046627, :y 4.235083458011092} {:x 1.9600000083446503, :y 4.371959075131999} {:x 2.0300000086426735, :y 4.508834692252905} {:x 2.1000000089406967, :y 4.645710309373811} {:x 2.17000000923872, :y 4.782585926494718} {:x 2.240000009536743, :y 4.919461543615624} {:x 2.3100000098347664, :y 5.056337160736531} {:x 2.3800000101327896, :y 5.193212777857438} {:x 2.450000010430813, :y 5.330088394978343} {:x 2.520000010728836, :y 5.46696401209925} {:x 2.5900000110268593, :y 5.603839629220156} {:x 2.6600000113248825, :y 5.740715246341063} {:x 2.7300000116229057, :y 5.87759086346197} {:x 2.800000011920929, :y 6.014466480582875} {:x 2.870000012218952, :y 6.1513420977037825} {:x 2.9400000125169754, :y 6.288217714824688} {:x 3.0100000128149986, :y 6.425093331945595} {:x 3.080000013113022, :y 6.561968949066502} {:x 3.150000013411045, :y 6.698844566187407} {:x 3.2200000137090683, :y 6.8357201833083145} {:x 3.2900000140070915, :y 6.97259580042922} {:x 3.3600000143051147, :y 7.109471417550127} {:x 3.430000014603138, :y 7.246347034671032} {:x 3.500000014901161, :y 7.3832226517919395} {:x 3.5700000151991844, :y 7.520098268912847} {:x 3.6400000154972076, :y 7.656973886033752} {:x 3.710000015795231, :y 7.793849503154659} {:x 3.780000016093254, :y 7.930725120275564} {:x 3.8500000163912773, :y 8.067600737396472} {:x 3.9200000166893005, :y 8.204476354517379} {:x 3.9900000169873238, :y 8.341351971638284} {:x 4.060000017285347, :y 8.478227588759191} {:x 4.13000001758337, :y 8.615103205880096} {:x 4.200000017881393, :y 8.751978823001004} {:x 4.270000018179417, :y 8.888854440121909} {:x 4.34000001847744, :y 9.025730057242816} {:x 4.410000018775463, :y 9.162605674363723} {:x 4.480000019073486, :y 9.299481291484629} {:x 4.5500000193715096, :y 9.436356908605536} {:x 4.620000019669533, :y 9.573232525726441} {:x 4.690000019967556, :y 9.710108142847348} {:x 4.760000020265579, :y 9.846983759968255} {:x 4.8300000205636024, :y 9.98385937708916} {:x 4.900000020861626, :y 10.120734994210068} {:x 4.970000021159649, :y 10.257610611330973} {:x 5.040000021457672, :y 10.39448622845188} {:x 5.110000021755695, :y 10.531361845572787} {:x 5.180000022053719, :y 10.668237462693693} {:x 5.250000022351742, :y 10.8051130798146} {:x 5.320000022649765, :y 10.941988696935505} {:x 5.390000022947788, :y 11.078864314056412} {:x 5.4600000232458115, :y 11.21573993117732} {:x 5.530000023543835, :y 11.352615548298225} {:x 5.600000023841858, :y 11.489491165419132} {:x 5.670000024139881, :y 11.626366782540037} {:x 5.740000024437904, :y 11.763242399660944} {:x 5.810000024735928, :y 11.900118016781851} {:x 5.880000025033951, :y 12.036993633902757} {:x 5.950000025331974, :y 12.173869251023664} {:x 6.020000025629997, :y 12.31074486814457} {:x 6.0900000259280205, :y 12.447620485265476} {:x 6.160000026226044, :y 12.584496102386383} {:x 6.230000026524067, :y 12.721371719507289} {:x 6.30000002682209, :y 12.858247336628196} {:x 6.370000027120113, :y 12.995122953749101} {:x 6.440000027418137, :y 13.131998570870008} {:x 6.51000002771616, :y 13.268874187990914} {:x 6.580000028014183, :y 13.405749805111821} {:x 6.650000028312206, :y 13.542625422232728} {:x 6.7200000286102295, :y 13.679501039353633} {:x 6.790000028908253, :y 13.81637665647454} {:x 6.860000029206276, :y 13.953252273595446} {:x 6.930000029504299, :y 14.090127890716353})} {:name \"44c8126a-4379-4828-827c-04f62b087e33\", :values ({:x 1.0, :y 2.1} {:x 2.0, :y 3.9} {:x 3.0, :y 5.3} {:x 4.0, :y 7.7} {:x 5.0, :y 10.2} {:x 6.0, :y 12.9})}), :marks ({:type \"line\", :from {:data \"06654fa0-633b-4a3c-90b0-74a734527fd9\"}, :properties {:enter {:x {:scale \"x\", :field \"data.x\"}, :y {:scale \"y\", :field \"data.y\"}, :stroke {:value \"#FF29D2\"}, :strokeWidth {:value 2}, :strokeOpacity {:value 1}}}} {:type \"symbol\", :from {:data \"44c8126a-4379-4828-827c-04f62b087e33\"}, :properties {:enter {:x {:scale \"x\", :field \"data.x\"}, :y {:scale \"y\", :field \"data.y\"}, :fill {:value \"steelblue\"}, :fillOpacity {:value 1}}, :update {:shape \"circle\", :size {:value 70}, :stroke {:value \"transparent\"}}, :hover {:size {:value 210}, :stroke {:value \"white\"}}}})}}"}
;; <=

;; **
;;; ## Beta-Bernoulli coin flip.
;;;
;;; The true posterior distribution in this example should be a distribution Beta(2, 1), with mean 0.66.
;; **

;; @@
(def coinflip
  (foppl-query
    (let [p (sample (beta 1 1))
          d (bernoulli p)]
      (observe d 1)
      p)))

(foppl/print-graph (first coinflip))
;; @@
;; ->
;;; Vertices V: #{y34509 x34508}
;;;
;;; Arcs A: #{[x34508 y34509]}
;;;
;;; Conditional densities P:
;;; x34508 -&gt; (fn [] (beta 1 1))
;;; y34509 -&gt; (fn [x34508] (bernoulli x34508))
;;;
;;; Observed values O:
;;; y34509 -&gt; 1
;;;
;; <-
;; =>
;;; {"type":"html","content":"<span class='clj-nil'>nil</span>","value":"nil"}
;; <=

;; @@
(def coinflip-posterior (take 1000 (drop 500 (gibbs/gibbs-seq coinflip))))

(plot/histogram coinflip-posterior :plot-range [[0 1] :all])

(mean coinflip-posterior)
;; @@
;; =>
;;; {"type":"html","content":"<span class='clj-double'>0.6714066442801546</span>","value":"0.6714066442801546"}
;; <=

;; **
;;; ## Hidden Markov model.
;; **

;; @@
(def hmm-points [0.9 0.8 0.7 0.0 -0.025
                 5.0 2.0 0.1 0.0 0.13
                 0.45 6.0 0.2 0.3 -1.0 -1.0])

(def hidden-markov-model
  (foppl-query

    ;; Define the init, transition, and observation distributions
    (defn get-init-params []
      (vector (/ 1. 3.) (/ 1. 3.) (/ 1. 3.)))

    (defn get-trans-params [k]
      (nth (vector (vector 0.1  0.5  0.4 )
                   (vector 0.2  0.2  0.6 )
                   (vector 0.15 0.15 0.7 )) k))

    (defn get-obs-dist [k]
      (nth (vector (normal -1 1)
                   (normal  1 1)
                   (normal  0 1)) k))

    ;; Function to step through HMM and sample latent state
    (defn hmm-step [n states]
      (let [next-state (sample (discrete (get-trans-params (last states))))]
        (observe (get-obs-dist next-state) (get hmm-points n))
        (conj states next-state)))

    ;; Loop through the data
    (let [init-state (sample (discrete (get-init-params)))]
      (loop 16 (vector init-state) hmm-step))))
;; @@
;; =>
;;; {"type":"html","content":"<span class='clj-var'>#&#x27;foppl-bugs/hidden-markov-model</span>","value":"#'foppl-bugs/hidden-markov-model"}
;; <=

;; @@
(def hmm-posterior (take 1000 (take-nth 10 (drop 500 (gibbs/gibbs-seq hidden-markov-model)))))
;; @@
;; =>
;;; {"type":"html","content":"<span class='clj-var'>#&#x27;foppl-bugs/hmm-posterior</span>","value":"#'foppl-bugs/hmm-posterior"}
;; <=

;; **
;;; This plot shows the marginal probability of being in each state at each timestep.
;;;
;;; *TODO* need to check whether these are actually correct marginals.
;; **

;; @@
(let [p0 (mean (mat/mul (mat/eq hmm-posterior 0) 1.0) 0)
      p1 (mean (mat/mul (mat/eq hmm-posterior 1) 1.0) 0)]
  (plot/compose
    (plot/list-plot p0 :joined true :color :red :plot-range [:all [0 1]])
    (plot/list-plot p1 :joined true :color :blue)
    (plot/list-plot (mat/sub 1.0 (mat/add p0 p1)) :joined true :color :green)))
;; @@
;; =>
;;; {"type":"vega","content":{"width":400,"height":247.2187957763672,"padding":{"top":10,"left":55,"bottom":40,"right":10},"scales":[{"name":"x","type":"linear","range":"width","zero":false,"domain":{"data":"be5db9fc-4bbd-463c-84be-c59fd7c0d6ee","field":"data.x"}},{"name":"y","type":"linear","range":"height","nice":true,"zero":false,"domain":[0,1]}],"axes":[{"type":"x","scale":"x"},{"type":"y","scale":"y"}],"data":[{"name":"be5db9fc-4bbd-463c-84be-c59fd7c0d6ee","values":[{"x":0,"y":0.4},{"x":1,"y":0.008},{"x":2,"y":0.014},{"x":3,"y":0.009000000000000001},{"x":4,"y":0.021},{"x":5,"y":0.091},{"x":6,"y":0.0},{"x":7,"y":0.006},{"x":8,"y":0.022},{"x":9,"y":0.017},{"x":10,"y":0.015},{"x":11,"y":0.021},{"x":12,"y":0.0},{"x":13,"y":0.031},{"x":14,"y":0.025},{"x":15,"y":0.049},{"x":16,"y":0.061}]},{"name":"accb3a76-8a0d-4130-bce7-ffb8c95b74ba","values":[{"x":0,"y":0.289},{"x":1,"y":0.339},{"x":2,"y":0.092},{"x":3,"y":0.067},{"x":4,"y":0.02},{"x":5,"y":0.025},{"x":6,"y":0.854},{"x":7,"y":0.323},{"x":8,"y":0.045},{"x":9,"y":0.029},{"x":10,"y":0.044},{"x":11,"y":0.073},{"x":12,"y":0.976},{"x":13,"y":0.057},{"x":14,"y":0.052000000000000005},{"x":15,"y":0.014},{"x":16,"y":0.013000000000000001}]},{"name":"51f5447d-2a30-45c3-a648-df669cdeed9c","values":[{"x":0,"y":0.31099999999999994},{"x":1,"y":0.653},{"x":2,"y":0.894},{"x":3,"y":0.9239999999999999},{"x":4,"y":0.959},{"x":5,"y":0.884},{"x":6,"y":0.14600000000000002},{"x":7,"y":0.671},{"x":8,"y":0.933},{"x":9,"y":0.954},{"x":10,"y":0.9410000000000001},{"x":11,"y":0.906},{"x":12,"y":0.02400000000000002},{"x":13,"y":0.912},{"x":14,"y":0.923},{"x":15,"y":0.937},{"x":16,"y":0.926}]}],"marks":[{"type":"line","from":{"data":"be5db9fc-4bbd-463c-84be-c59fd7c0d6ee"},"properties":{"enter":{"x":{"scale":"x","field":"data.x"},"y":{"scale":"y","field":"data.y"},"stroke":{"value":"red"},"strokeWidth":{"value":2},"strokeOpacity":{"value":1}}}},{"type":"line","from":{"data":"accb3a76-8a0d-4130-bce7-ffb8c95b74ba"},"properties":{"enter":{"x":{"scale":"x","field":"data.x"},"y":{"scale":"y","field":"data.y"},"stroke":{"value":"blue"},"strokeWidth":{"value":2},"strokeOpacity":{"value":1}}}},{"type":"line","from":{"data":"51f5447d-2a30-45c3-a648-df669cdeed9c"},"properties":{"enter":{"x":{"scale":"x","field":"data.x"},"y":{"scale":"y","field":"data.y"},"stroke":{"value":"green"},"strokeWidth":{"value":2},"strokeOpacity":{"value":1}}}}]},"value":"#gorilla_repl.vega.VegaView{:content {:width 400, :height 247.2188, :padding {:top 10, :left 55, :bottom 40, :right 10}, :scales [{:name \"x\", :type \"linear\", :range \"width\", :zero false, :domain {:data \"be5db9fc-4bbd-463c-84be-c59fd7c0d6ee\", :field \"data.x\"}} {:name \"y\", :type \"linear\", :range \"height\", :nice true, :zero false, :domain [0 1]}], :axes [{:type \"x\", :scale \"x\"} {:type \"y\", :scale \"y\"}], :data ({:name \"be5db9fc-4bbd-463c-84be-c59fd7c0d6ee\", :values ({:x 0, :y 0.4} {:x 1, :y 0.008} {:x 2, :y 0.014} {:x 3, :y 0.009000000000000001} {:x 4, :y 0.021} {:x 5, :y 0.091} {:x 6, :y 0.0} {:x 7, :y 0.006} {:x 8, :y 0.022} {:x 9, :y 0.017} {:x 10, :y 0.015} {:x 11, :y 0.021} {:x 12, :y 0.0} {:x 13, :y 0.031} {:x 14, :y 0.025} {:x 15, :y 0.049} {:x 16, :y 0.061})} {:name \"accb3a76-8a0d-4130-bce7-ffb8c95b74ba\", :values ({:x 0, :y 0.289} {:x 1, :y 0.339} {:x 2, :y 0.092} {:x 3, :y 0.067} {:x 4, :y 0.02} {:x 5, :y 0.025} {:x 6, :y 0.854} {:x 7, :y 0.323} {:x 8, :y 0.045} {:x 9, :y 0.029} {:x 10, :y 0.044} {:x 11, :y 0.073} {:x 12, :y 0.976} {:x 13, :y 0.057} {:x 14, :y 0.052000000000000005} {:x 15, :y 0.014} {:x 16, :y 0.013000000000000001})} {:name \"51f5447d-2a30-45c3-a648-df669cdeed9c\", :values ({:x 0, :y 0.31099999999999994} {:x 1, :y 0.653} {:x 2, :y 0.894} {:x 3, :y 0.9239999999999999} {:x 4, :y 0.959} {:x 5, :y 0.884} {:x 6, :y 0.14600000000000002} {:x 7, :y 0.671} {:x 8, :y 0.933} {:x 9, :y 0.954} {:x 10, :y 0.9410000000000001} {:x 11, :y 0.906} {:x 12, :y 0.02400000000000002} {:x 13, :y 0.912} {:x 14, :y 0.923} {:x 15, :y 0.937} {:x 16, :y 0.926})}), :marks ({:type \"line\", :from {:data \"be5db9fc-4bbd-463c-84be-c59fd7c0d6ee\"}, :properties {:enter {:x {:scale \"x\", :field \"data.x\"}, :y {:scale \"y\", :field \"data.y\"}, :stroke {:value :red}, :strokeWidth {:value 2}, :strokeOpacity {:value 1}}}} {:type \"line\", :from {:data \"accb3a76-8a0d-4130-bce7-ffb8c95b74ba\"}, :properties {:enter {:x {:scale \"x\", :field \"data.x\"}, :y {:scale \"y\", :field \"data.y\"}, :stroke {:value :blue}, :strokeWidth {:value 2}, :strokeOpacity {:value 1}}}} {:type \"line\", :from {:data \"51f5447d-2a30-45c3-a648-df669cdeed9c\"}, :properties {:enter {:x {:scale \"x\", :field \"data.x\"}, :y {:scale \"y\", :field \"data.y\"}, :stroke {:value :green}, :strokeWidth {:value 2}, :strokeOpacity {:value 1}}}})}}"}
;; <=

;; **
;;; ## Gaussian mixture model.
;; **

;; ;; @@
;; (def gaussian-mixture-model
;;   (foppl-query
;;     (defn sample-likelihoods [_ likes]
;;       (let [precision (sample (gamma 1.0 1.0))
;;             mean (sample (normal 0.0 precision))
;;             sigma (/ (sqrt precision))]
;;         (conj likes
;;               (normal mean sigma))))

;;     (defn sample-components [_ zs prior]
;;       (let [z (sample prior)]
;;         (conj zs z)))

;;     (defn observe-data [n _ ys zs likes]
;;       (let [y (nth ys n)
;;             z (nth zs n)]
;;         (observe (nth likes z) y)
;;         nil))

;;     (let [ys (vector 1.1 2.1 2.0 1.9 0.0 -0.1 -0.05)
;;           z-prior (discrete
;;                     (sample (dirichlet (vector 1.0 1.0 1.0))))
;;           zs (loop 7 (vector) sample-components z-prior)
;;           likes (loop 3 (vector) sample-likelihoods)]
;;       (loop 7 nil observe-data ys zs likes)
;;       zs)))

(foppl/print-graph (first gaussian-mixture-model))
(def gaussian-mixture-model
  (foppl-query
    (defn sample-components [_ zs pi]
      (let [z (sample (categorical pi))]
        (conj zs z)))

    (defn observe-data [n _ ys zs mus]
      (let [y (get ys n)
            z (get zs n)
            mu (get mus z)]
        (observe (normal mu 2) y)
        nil))

    (let [ys  (vector -2.0  -2.5  -1.7  -1.9  -2.2
                          1.5  2.2  3  1.2  2.8)
          pi  [0.5 0.5]
          zs  (loop 10 (vector sample-components) pi)
          mus (vector (sample (normal 0 2))
                      (sample (normal 0 2)))]
      (loop 10 nil observe-data ys zs mus)
      (vector mus zs))))


;; @@
;; ->
;;; Vertices V: #{x35233 x35236 x35224 x35239 y35285 x35221 x35249 y35299 x35250 x35261 x35227 y35271 y35292 x35242 x35262 x35230 x35255 x35256 y35306 y35278 y35313}
;;;
;;; Arcs A: #{[x35255 y35313] [x35255 x35256] [x35250 y35299] [x35255 y35299] [x35261 y35306] [x35249 x35250] [x35250 y35278] [x35255 y35306] [x35262 y35313] [x35242 y35313] [x35221 x35230] [x35227 y35278] [x35249 y35285] [x35261 y35313] [x35256 y35299] [x35261 y35271] [x35261 y35292] [x35256 y35306] [x35249 y35278] [x35255 y35271] [x35250 y35292] [x35262 y35299] [x35221 x35236] [x35236 y35299] [x35256 y35292] [x35255 y35285] [x35230 y35285] [x35250 y35306] [x35250 y35313] [x35261 y35278] [x35250 y35271] [x35249 y35313] [x35221 x35227] [x35262 y35292] [x35262 y35271] [x35221 x35233] [x35233 y35292] [x35249 y35306] [x35261 y35285] [x35224 y35271] [x35262 y35306] [x35239 y35306] [x35262 y35278] [x35256 y35271] [x35221 x35242] [x35256 y35278] [x35250 y35285] [x35255 y35292] [x35261 y35299] [x35249 y35299] [x35256 y35313] [x35221 x35224] [x35249 y35271] [x35221 x35239] [x35256 y35285] [x35249 y35292] [x35261 x35262] [x35255 y35278] [x35262 y35285]}
;;;
;;; Conditional densities P:
;;; x35233 -&gt; (fn [x35221] (discrete x35221))
;;; x35236 -&gt; (fn [x35221] (discrete x35221))
;;; x35224 -&gt; (fn [x35221] (discrete x35221))
;;; x35239 -&gt; (fn [x35221] (discrete x35221))
;;; y35285 -&gt; (fn [x35230 x35250 x35255 x35261 x35262 x35249 x35256] (nth [(normal x35250 (/ (sqrt x35249))) (normal x35256 (/ (sqrt x35255))) (normal x35262 (/ (sqrt x35261)))] x35230))
;;; x35221 -&gt; (fn [] (dirichlet [1.0 1.0 1.0]))
;;; x35249 -&gt; (fn [] (gamma 1.0 1.0))
;;; y35299 -&gt; (fn [x35250 x35236 x35255 x35261 x35262 x35249 x35256] (nth [(normal x35250 (/ (sqrt x35249))) (normal x35256 (/ (sqrt x35255))) (normal x35262 (/ (sqrt x35261)))] x35236))
;;; x35250 -&gt; (fn [x35249] (normal 0.0 x35249))
;;; x35261 -&gt; (fn [] (gamma 1.0 1.0))
;;; x35227 -&gt; (fn [x35221] (discrete x35221))
;;; y35271 -&gt; (fn [x35250 x35255 x35224 x35261 x35262 x35249 x35256] (nth [(normal x35250 (/ (sqrt x35249))) (normal x35256 (/ (sqrt x35255))) (normal x35262 (/ (sqrt x35261)))] x35224))
;;; y35292 -&gt; (fn [x35250 x35255 x35261 x35262 x35233 x35249 x35256] (nth [(normal x35250 (/ (sqrt x35249))) (normal x35256 (/ (sqrt x35255))) (normal x35262 (/ (sqrt x35261)))] x35233))
;;; x35242 -&gt; (fn [x35221] (discrete x35221))
;;; x35262 -&gt; (fn [x35261] (normal 0.0 x35261))
;;; x35230 -&gt; (fn [x35221] (discrete x35221))
;;; x35255 -&gt; (fn [] (gamma 1.0 1.0))
;;; x35256 -&gt; (fn [x35255] (normal 0.0 x35255))
;;; y35306 -&gt; (fn [x35239 x35250 x35255 x35261 x35262 x35249 x35256] (nth [(normal x35250 (/ (sqrt x35249))) (normal x35256 (/ (sqrt x35255))) (normal x35262 (/ (sqrt x35261)))] x35239))
;;; y35278 -&gt; (fn [x35227 x35250 x35255 x35261 x35262 x35249 x35256] (nth [(normal x35250 (/ (sqrt x35249))) (normal x35256 (/ (sqrt x35255))) (normal x35262 (/ (sqrt x35261)))] x35227))
;;; y35313 -&gt; (fn [x35242 x35250 x35255 x35261 x35262 x35249 x35256] (nth [(normal x35250 (/ (sqrt x35249))) (normal x35256 (/ (sqrt x35255))) (normal x35262 (/ (sqrt x35261)))] x35242))
;;;
;;; Observed values O:
;;; y35271 -&gt; 1.1
;;; y35278 -&gt; 2.1
;;; y35285 -&gt; 2.0
;;; y35292 -&gt; 1.9
;;; y35299 -&gt; 0.0
;;; y35306 -&gt; -0.1
;;; y35313 -&gt; -0.05
;;;
;; <-
;; =>
;;; {"type":"html","content":"<span class='clj-nil'>nil</span>","value":"nil"}
;; <=

;; **
;;; *TODO* figure out what to check here, to see if inference works. Note that this Gibbs sampler is not likely to mix well.
;;;
;;; Right now, just making a histogram over the number of included components in the model...
;; **

;; @@
(def gmm-num-components
  (map #(count (set %))
       (take 1000 (take-nth 10 (drop 500 (gibbs/gibbs-seq gaussian-mixture-model))))))

(into (sorted-map) (frequencies gmm-num-components))
;; @@
;; =>
;;; {"type":"list-like","open":"<span class='clj-map'>{</span>","close":"<span class='clj-map'>}</span>","separator":", ","items":[{"type":"list-like","open":"","close":"","separator":" ","items":[{"type":"html","content":"<span class='clj-unkown'>1</span>","value":"1"},{"type":"html","content":"<span class='clj-long'>525</span>","value":"525"}],"value":"[1 525]"},{"type":"list-like","open":"","close":"","separator":" ","items":[{"type":"html","content":"<span class='clj-unkown'>2</span>","value":"2"},{"type":"html","content":"<span class='clj-long'>413</span>","value":"413"}],"value":"[2 413]"},{"type":"list-like","open":"","close":"","separator":" ","items":[{"type":"html","content":"<span class='clj-unkown'>3</span>","value":"3"},{"type":"html","content":"<span class='clj-long'>62</span>","value":"62"}],"value":"[3 62]"}],"value":"{1 525, 2 413, 3 62}"}
;; <=

;; **
;;; # More examples to come
;;;
;;; In particular, we need to test on an example in which observe statements interact with control flow.
;; **

;; @@
(def branching-query
  (foppl-query
    (defn norm-gamma [m l a b]
      (let [tau (sample (gamma a b))
            sigma (/ (sqrt tau))
            mu (sample (normal m (/ sigma (sqrt l))))]
        (normal mu sigma)))

    (let [d0 (norm-gamma 0.0 0.1 1.0 1.0)
          z (sample (bernoulli 0.5))]
      (if (= z 0)
        (observe d0 0.5)
        (observe (norm-gamma 1.0 0.1 1.0 1.0) 0.5))
      z)))

(foppl/print-graph (first branching-query))
;; @@
;; ->
;;; Vertices V: #{y35468 x35474 x35471 x35464 x35467 y35475 x35461}
;;;
;;; Arcs A: #{[x35464 y35468] [x35474 y35475] [x35467 y35475] [x35471 x35474] [x35467 y35468] [x35461 x35464] [x35471 y35475] [x35461 y35468]}
;;;
;;; Conditional densities P:
;;; x35461 -&gt; (fn [] (gamma 1.0 1.0))
;;; x35464 -&gt; (fn [x35461] (normal 0.0 (/ (/ (sqrt x35461)) 0.31622776601683794)))
;;; x35467 -&gt; (fn [] (bernoulli 0.5))
;;; y35468 -&gt; (fn [x35464 x35467 x35461] (if (= x35467 0) (normal x35464 (/ (sqrt x35461)))))
;;; x35471 -&gt; (fn [] (gamma 1.0 1.0))
;;; x35474 -&gt; (fn [x35471] (normal 1.0 (/ (/ (sqrt x35471)) 0.31622776601683794)))
;;; y35475 -&gt; (fn [x35474 x35471 x35467] (if (not (= x35467 0)) (normal x35474 (/ (sqrt x35471)))))
;;;
;;; Observed values O:
;;; y35468 -&gt; 0.5
;;; y35475 -&gt; 0.5
;;;
;; <-
;; =>
;;; {"type":"html","content":"<span class='clj-nil'>nil</span>","value":"nil"}
;; <=

;; @@
(foppl/draw-from-prior branching-query)
;; @@
;; =>
;;; {"type":"list-like","open":"<span class='clj-record'>#foppl.core.Trace{</span>","close":"<span class='clj-record'>}</span>","separator":" ","items":[{"type":"list-like","open":"","close":"","separator":" ","items":[{"type":"html","content":"<span class='clj-keyword'>:rdb</span>","value":":rdb"},{"type":"list-like","open":"<span class='clj-map'>{</span>","close":"<span class='clj-map'>}</span>","separator":", ","items":[{"type":"list-like","open":"","close":"","separator":" ","items":[{"type":"html","content":"<span class='clj-symbol'>x35461</span>","value":"x35461"},{"type":"html","content":"<span class='clj-double'>0.46661444344700254</span>","value":"0.46661444344700254"}],"value":"[x35461 0.46661444344700254]"},{"type":"list-like","open":"","close":"","separator":" ","items":[{"type":"html","content":"<span class='clj-symbol'>x35467</span>","value":"x35467"},{"type":"html","content":"<span class='clj-long'>1</span>","value":"1"}],"value":"[x35467 1]"},{"type":"list-like","open":"","close":"","separator":" ","items":[{"type":"html","content":"<span class='clj-symbol'>x35464</span>","value":"x35464"},{"type":"html","content":"<span class='clj-double'>-1.192636652597383</span>","value":"-1.192636652597383"}],"value":"[x35464 -1.192636652597383]"},{"type":"list-like","open":"","close":"","separator":" ","items":[{"type":"html","content":"<span class='clj-symbol'>x35471</span>","value":"x35471"},{"type":"html","content":"<span class='clj-double'>0.9034649552606568</span>","value":"0.9034649552606568"}],"value":"[x35471 0.9034649552606568]"},{"type":"list-like","open":"","close":"","separator":" ","items":[{"type":"html","content":"<span class='clj-symbol'>x35474</span>","value":"x35474"},{"type":"html","content":"<span class='clj-double'>3.6505317687961276</span>","value":"3.6505317687961276"}],"value":"[x35474 3.6505317687961276]"}],"value":"{x35461 0.46661444344700254, x35467 1, x35464 -1.192636652597383, x35471 0.9034649552606568, x35474 3.6505317687961276}"}],"value":"[:rdb {x35461 0.46661444344700254, x35467 1, x35464 -1.192636652597383, x35471 0.9034649552606568, x35474 3.6505317687961276}]"},{"type":"list-like","open":"","close":"","separator":" ","items":[{"type":"html","content":"<span class='clj-keyword'>:ordering</span>","value":":ordering"},{"type":"list-like","open":"<span class='clj-list'>(</span>","close":"<span class='clj-list'>)</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-symbol'>x35461</span>","value":"x35461"},{"type":"html","content":"<span class='clj-symbol'>x35467</span>","value":"x35467"},{"type":"html","content":"<span class='clj-symbol'>x35464</span>","value":"x35464"},{"type":"html","content":"<span class='clj-symbol'>x35471</span>","value":"x35471"},{"type":"html","content":"<span class='clj-symbol'>x35474</span>","value":"x35474"},{"type":"html","content":"<span class='clj-symbol'>y35475</span>","value":"y35475"},{"type":"html","content":"<span class='clj-symbol'>y35468</span>","value":"y35468"}],"value":"(x35461 x35467 x35464 x35471 x35474 y35475 y35468)"}],"value":"[:ordering (x35461 x35467 x35464 x35471 x35474 y35475 y35468)]"},{"type":"list-like","open":"","close":"","separator":" ","items":[{"type":"html","content":"<span class='clj-keyword'>:logprob</span>","value":":logprob"},{"type":"html","content":"<span class='clj-double'>-12.43964188146118</span>","value":"-12.43964188146118"}],"value":"[:logprob -12.43964188146118]"}],"value":"#foppl.core.Trace{:rdb {x35461 0.46661444344700254, x35467 1, x35464 -1.192636652597383, x35471 0.9034649552606568, x35474 3.6505317687961276}, :ordering (x35461 x35467 x35464 x35471 x35474 y35475 y35468), :logprob -12.43964188146118}"}
;; <=

;; @@
(float (mean (drop 1000 (take 5000 (gibbs/gibbs-seq branching-query)))))
;; @@
;; =>
;;; {"type":"html","content":"<span class='clj-unkown'>0.49175</span>","value":"0.49175"}
;; <=

;; @@

;; @@
